/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/sleek-dashboard/js/charts/chart-js.js":
/*!*********************************************************!*\
  !*** ./resources/sleek-dashboard/js/charts/chart-js.js ***!
  \*********************************************************/
/***/ (() => {

eval("/* ====== Index ======\n\n1. DUAL LINE CHART\n2. DUAL LINE CHART2\n3. LINE CHART\n4. LINE CHART1\n5. LINE CHART2\n6. AREA CHART\n7. AREA CHART1\n8. AREA CHART2\n9. AREA CHART3\n10. GRADIENT LINE CHART\n11. DOUGHNUT CHART\n12. POLAR CHART\n13. RADAR CHART\n14. CURRENT USER BAR CHART\n15. ANALYTICS - USER ACQUISITION\n16. ANALYTICS - ACTIVITY CHART\n17. HORIZONTAL BAR CHART1\n18. HORIZONTAL BAR CHART2\n19. DEVICE - DOUGHNUT CHART\n20. BAR CHART\n21. BAR CHART1\n22. BAR CHART2\n23. BAR CHART3\n24. GRADIENT LINE CHART1\n25. GRADIENT LINE CHART2\n26. GRADIENT LINE CHART3\n27. ACQUISITION3\n28. STATISTICS\n\n====== End ======*/\n$(document).ready(function () {\n  \"use strict\";\n  /*======== 1. DUAL LINE CHART ========*/\n\n  var dual = document.getElementById(\"dual-line\");\n\n  if (dual !== null) {\n    var urChart = new Chart(dual, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"Old\",\n          pointRadius: 4,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          fill: false,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#fdc506\",\n          data: [0, 4, 3, 5.5, 3, 4.7, 0]\n        }, {\n          label: \"New\",\n          fill: false,\n          pointRadius: 4,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#4c84ff\",\n          data: [0, 2, 4.3, 3.8, 5.2, 1.8, 2.2]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            right: 10\n          }\n        },\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 14,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2\n        }\n      }\n    });\n  }\n  /*======== 1. DUAL LINE CHART2 ========*/\n\n\n  var dual3 = document.getElementById(\"dual-line3\");\n\n  if (dual3 !== null) {\n    var urdChart = new Chart(dual3, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"Old\",\n          pointRadius: 4,\n          pointBackgroundColor: \"#fec400\",\n          pointBorderWidth: 2,\n          fill: false,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#fcdf80\",\n          data: [0, 4, 3, 5.5, 3, 4.7, 0]\n        }, {\n          label: \"New\",\n          fill: false,\n          pointRadius: 4,\n          pointBackgroundColor: \"#fec400\",\n          pointBorderWidth: 2,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#ffffff\",\n          data: [0, 2, 4.3, 3.8, 5.2, 1.8, 2.2]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        layout: {\n          padding: {\n            right: 10\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: true\n        }\n      }\n    });\n  }\n  /*======== 3. LINE CHART ========*/\n\n\n  var ctx = document.getElementById(\"linechart\");\n\n  if (ctx !== null) {\n    var chart = new Chart(ctx, {\n      // The type of chart we want to create\n      type: \"line\",\n      // The data for our dataset\n      data: {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        datasets: [{\n          label: \"\",\n          backgroundColor: \"transparent\",\n          borderColor: \"rgb(82, 136, 255)\",\n          data: [100, 11000, 10000, 14000, 11000, 17000, 14500, 18000, 5000, 23000, 14000, 19000],\n          lineTension: 0.3,\n          pointRadius: 5,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointHoverBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 8,\n          pointHoverBorderWidth: 1\n        }]\n      },\n      // Configuration options go here\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        layout: {\n          padding: {\n            right: 10\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true,\n              color: \"#eee\",\n              zeroLineColor: \"#eee\"\n            },\n            ticks: {\n              callback: function callback(value) {\n                var ranges = [{\n                  divider: 1e6,\n                  suffix: \"M\"\n                }, {\n                  divider: 1e4,\n                  suffix: \"k\"\n                }];\n\n                function formatNumber(n) {\n                  for (var i = 0; i < ranges.length; i++) {\n                    if (n >= ranges[i].divider) {\n                      return (n / ranges[i].divider).toString() + ranges[i].suffix;\n                    }\n                  }\n\n                  return n;\n                }\n\n                return formatNumber(value);\n              }\n            }\n          }]\n        },\n        tooltips: {\n          callbacks: {\n            title: function title(tooltipItem, data) {\n              return data[\"labels\"][tooltipItem[0][\"index\"]];\n            },\n            label: function label(tooltipItem, data) {\n              return \"$\" + data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]];\n            }\n          },\n          responsive: true,\n          intersect: false,\n          enabled: true,\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 18,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          xPadding: 20,\n          yPadding: 10,\n          displayColors: false,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2,\n          caretSize: 10,\n          caretPadding: 15\n        }\n      }\n    });\n  }\n  /*======== 4. LINE CHART1 ========*/\n\n\n  var lchart1 = document.getElementById(\"linechart1\");\n\n  if (lchart1 !== null) {\n    var urChart = new Chart(lchart1, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"Old\",\n          pointRadius: 0,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          fill: false,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#fcdf80\",\n          data: [0, 5, 2.5, 9.5, 3.3, 8, 0]\n        }, {\n          label: \"New\",\n          fill: false,\n          pointRadius: 0,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#4c84ff\",\n          data: [0, 2, 6, 5, 8.5, 3, 3.8]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: false\n        }\n      }\n    });\n  }\n  /*======== 5. LINE CHART2 ========*/\n\n\n  var lchart2 = document.getElementById(\"linechart2\");\n\n  if (lchart2 !== null) {\n    var urChart2 = new Chart(lchart2, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"Old\",\n          pointRadius: 0,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          fill: false,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#fcdf80\",\n          data: [0, 5, 2.5, 9.5, 3.3, 8, 0]\n        }, {\n          label: \"New\",\n          fill: false,\n          pointRadius: 0,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"#ffffff\",\n          data: [0, 2, 6, 5, 8.5, 3, 3.8]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: false\n        }\n      }\n    });\n  }\n  /*======== 6. AREA CHART ========*/\n\n\n  var area = document.getElementById(\"area-chart\");\n\n  if (area !== null) {\n    var areaChart = new Chart(area, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"New\",\n          pointHitRadius: 10,\n          pointRadius: 0,\n          fill: true,\n          backgroundColor: \"rgba(76, 132, 255, 0.9)\",\n          borderColor: \"rgba(76, 132, 255, 0.9)\",\n          data: [0, 4, 2, 6.5, 3, 4.7, 0]\n        }, {\n          label: \"Old\",\n          pointHitRadius: 10,\n          pointRadius: 0,\n          fill: true,\n          backgroundColor: \"rgba(253, 197, 6, 0.9)\",\n          borderColor: \"rgba(253, 197, 6, 1)\",\n          data: [0, 2, 4.3, 3.8, 5.2, 1.8, 2.2]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        layout: {\n          padding: {\n            right: 10\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 14,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2\n        }\n      }\n    });\n  }\n  /*======== 7. AREA CHART1 ========*/\n\n\n  var area1 = document.getElementById(\"areaChart1\");\n\n  if (area1 !== null) {\n    var areaChart = new Chart(area1, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"New\",\n          pointRadius: 0.1,\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(76, 132, 255, 0.9)\",\n          borderColor: \"rgba(76, 132, 255, 0.9)\",\n          data: [0, 5, 2.5, 9, 3.5, 6.5, 0]\n        }, {\n          label: \"Old\",\n          pointRadius: 0.1,\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(253, 197, 6, 0.9)\",\n          borderColor: \"rgba(253, 197, 6, 1)\",\n          data: [0, 2, 5.5, 2.6, 5.7, 4, 2.8]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: false\n        }\n      }\n    });\n  }\n  /*======== 8. AREA CHART2 ========*/\n\n\n  var area2 = document.getElementById(\"areaChart2\");\n\n  if (area2 !== null) {\n    var areaChart = new Chart(area2, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"New\",\n          pointRadius: 0.1,\n          fill: true,\n          lineTension: 0.6,\n          backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n          borderColor: \"rgba(255, 255, 255,0)\",\n          data: [0, 5, 2.5, 9, 3.5, 6.5, 0]\n        }, {\n          label: \"Old\",\n          pointRadius: 0.1,\n          fill: true,\n          lineTension: 0.6,\n          backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n          borderColor: \"rgba(255, 255, 255, 0)\",\n          data: [0, 2, 5.5, 2.6, 5.7, 4, 2.8]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: false\n        }\n      }\n    });\n  }\n  /*======== 9. AREA CHART3 ========*/\n\n\n  var area3 = document.getElementById(\"area-chart3\");\n\n  if (area3 !== null) {\n    var areaChart3 = new Chart(area3, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"New\",\n          pointHitRadius: 10,\n          pointRadius: 0,\n          fill: true,\n          backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n          borderColor: \"rgba(255, 255, 255,0)\",\n          data: [0, 4, 2, 6.5, 3, 4.7, 0]\n        }, {\n          label: \"Old\",\n          pointHitRadius: 10,\n          pointRadius: 0,\n          fill: true,\n          backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n          borderColor: \"rgba(255, 255, 255, 0)\",\n          data: [0, 2, 4.3, 3.8, 5.2, 1.8, 2.2]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        layout: {\n          padding: {\n            right: 10\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          enabled: true\n        }\n      }\n    });\n  }\n  /*======== 10. GRADIENT LINE CHART ========*/\n\n\n  var line = document.getElementById(\"line\");\n\n  if (line !== null) {\n    line = line.getContext(\"2d\");\n    var gradientFill = line.createLinearGradient(0, 120, 0, 0);\n    gradientFill.addColorStop(0, \"rgba(41,204,151,0.10196)\");\n    gradientFill.addColorStop(1, \"rgba(41,204,151,0.30196)\");\n    var lChart = new Chart(line, {\n      type: \"line\",\n      data: {\n        labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n        datasets: [{\n          label: \"Rev\",\n          lineTension: 0,\n          pointRadius: 4,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderColor: \"#29cc97\",\n          borderWidth: 2,\n          data: [0, 4, 3, 5.5, 3, 4.7, 1]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        layout: {\n          padding: {\n            right: 10\n          }\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: false\n            },\n            ticks: {\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: false,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 14,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2\n        }\n      }\n    });\n  }\n  /*======== 11. DOUGHNUT CHART ========*/\n\n\n  var doughnut = document.getElementById(\"doChart\");\n\n  if (doughnut !== null) {\n    var myDoughnutChart = new Chart(doughnut, {\n      type: \"doughnut\",\n      data: {\n        labels: [\"completed\", \"unpaid\", \"pending\", \"canceled\"],\n        datasets: [{\n          label: [\"completed\", \"unpaid\", \"pending\", \"canceled\"],\n          data: [4100, 2500, 1800, 2300],\n          backgroundColor: [\"#4c84ff\", \"#29cc97\", \"#8061ef\", \"#fec402\"],\n          borderWidth: 1 // borderColor: ['#4c84ff','#29cc97','#8061ef','#fec402']\n          // hoverBorderColor: ['#4c84ff', '#29cc97', '#8061ef', '#fec402']\n\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        cutoutPercentage: 75,\n        tooltips: {\n          callbacks: {\n            title: function title(tooltipItem, data) {\n              return \"Order : \" + data[\"labels\"][tooltipItem[0][\"index\"]];\n            },\n            label: function label(tooltipItem, data) {\n              return data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]];\n            }\n          },\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 14,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2\n        }\n      }\n    });\n  }\n  /*======== 12. POLAR CHART ========*/\n\n\n  var polar = document.getElementById(\"polar\");\n\n  if (polar !== null) {\n    var configPolar = {\n      data: {\n        datasets: [{\n          data: [43, 23, 53, 33, 55],\n          backgroundColor: [\"rgba(41,204,151,0.5)\", \"rgba(254,88,101,0.5)\", \"rgba(128,97,239,0.5)\", \"rgba(254,196,0,0.5)\", \"rgba(76,132,255,0.5)\"],\n          label: \"\" // for legend\n\n        }],\n        labels: [\"Total Sales\", \"Rejected\", \"Completed\", \"Pending\", \"Reserve\"]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          position: \"right\",\n          display: false\n        },\n        layout: {\n          padding: {\n            top: 10,\n            bottom: 10,\n            right: 10,\n            left: 10\n          }\n        },\n        title: {\n          display: false,\n          text: \"Chart.js Polar Area Chart\"\n        },\n        scale: {\n          ticks: {\n            beginAtZero: true,\n            fontColor: \"#1b223c\",\n            fontSize: 12,\n            stepSize: 10,\n            max: 60\n          },\n          reverse: false\n        },\n        animation: {\n          animateRotate: false,\n          animateScale: true\n        },\n        tooltips: {\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 14,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2\n        }\n      }\n    };\n    window.myPolarArea = Chart.PolarArea(polar, configPolar);\n  }\n  /*======== 13. RADAR CHART ========*/\n\n\n  var radar = document.getElementById(\"radar\");\n\n  if (radar !== null) {\n    var myRadar = new Chart(radar, {\n      type: \"radar\",\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n        datasets: [{\n          label: \"Current Year\",\n          backgroundColor: \"rgba(76,132,255,0.2)\",\n          borderColor: \"#4c84ff\",\n          pointBorderWidth: 2,\n          pointRadius: 4,\n          pointBorderColor: \"rgba(76,132,255,1)\",\n          pointBackgroundColor: \"#ffffff\",\n          data: [25, 31, 43, 48, 21, 36, 23, 12, 33, 36, 28, 55]\n        }, {\n          label: \"Previous Year\",\n          backgroundColor: \"rgba(41, 204, 151, 0.2)\",\n          borderColor: \"#29cc97\",\n          pointBorderWidth: 2,\n          pointRadius: 4,\n          pointBorderColor: \"#29cc97\",\n          pointBackgroundColor: \"#ffffff\",\n          data: [45, 77, 22, 12, 56, 43, 71, 23, 54, 19, 32, 55]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        title: {\n          display: false,\n          text: \"Chart.js Radar Chart\"\n        },\n        layout: {\n          padding: {\n            top: 10,\n            bottom: 10,\n            right: 10,\n            left: 10\n          }\n        },\n        scale: {\n          ticks: {\n            beginAtZero: true,\n            fontColor: \"#1b223c\",\n            fontSize: 12,\n            stepSize: 10,\n            max: 60\n          }\n        },\n        tooltips: {\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 14,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2\n        }\n      }\n    });\n  }\n  /*======== 14. CURRENT USER BAR CHART ========*/\n\n\n  var cUser = document.getElementById(\"currentUser\");\n\n  if (cUser !== null) {\n    var myUChart = new Chart(cUser, {\n      type: \"bar\",\n      data: {\n        labels: [\"1h\", \"10 m\", \"50 m\", \"30 m\", \"40 m\", \"20 m\", \"30 m\", \"25 m\", \"20 m\", \"5 m\", \"10 m\"],\n        datasets: [{\n          label: \"signup\",\n          data: [15, 30, 27, 43, 39, 18, 42, 25, 13, 18, 59],\n          // data: [2, 3.2, 1.8, 2.1, 1.5, 3.5, 4, 2.3, 2.9, 4.5, 1.8, 3.4, 2.8],\n          backgroundColor: \"#4c84ff\"\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: true,\n              display: false\n            },\n            ticks: {\n              fontColor: \"#8a909d\",\n              fontFamily: \"Roboto, sans-serif\",\n              display: false,\n              // hide main x-axis line\n              beginAtZero: true,\n              callback: function callback(tick, index, array) {\n                return index % 2 ? \"\" : tick;\n              }\n            },\n            barPercentage: 1.8,\n            categoryPercentage: 0.2\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: true,\n              display: true,\n              color: \"#eee\",\n              zeroLineColor: \"#eee\"\n            },\n            ticks: {\n              fontColor: \"#8a909d\",\n              fontFamily: \"Roboto, sans-serif\",\n              display: true,\n              beginAtZero: true\n            }\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 15,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          xPadding: 10,\n          yPadding: 7,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2,\n          caretSize: 6,\n          caretPadding: 5\n        }\n      }\n    });\n  }\n  /*======== 15. ANALYTICS - USER ACQUISITION ========*/\n\n\n  var acquisition = document.getElementById(\"acquisition\");\n\n  if (acquisition !== null) {\n    var acqData = [{\n      first: [100, 180, 44, 75, 150, 66, 70],\n      second: [144, 44, 177, 76, 23, 189, 12],\n      third: [44, 167, 102, 123, 183, 88, 134]\n    }, {\n      first: [144, 44, 110, 5, 123, 89, 12],\n      second: [22, 123, 45, 130, 112, 54, 181],\n      third: [55, 44, 144, 75, 155, 166, 70]\n    }, {\n      first: [134, 80, 123, 65, 171, 33, 22],\n      second: [44, 144, 77, 76, 123, 89, 112],\n      third: [156, 23, 165, 88, 112, 54, 181]\n    }];\n    var configAcq = {\n      // The type of chart we want to create\n      type: \"line\",\n      // The data for our dataset\n      data: {\n        labels: [\"4 Jan\", \"5 Jan\", \"6 Jan\", \"7 Jan\", \"8 Jan\", \"9 Jan\", \"10 Jan\"],\n        datasets: [{\n          label: \"Referral\",\n          backgroundColor: \"rgb(76, 132, 255)\",\n          borderColor: \"rgba(76, 132, 255,0)\",\n          data: acqData[0].first,\n          lineTension: 0.3,\n          pointBackgroundColor: \"rgba(76, 132, 255,0)\",\n          pointHoverBackgroundColor: \"rgba(76, 132, 255,1)\",\n          pointHoverRadius: 3,\n          pointHitRadius: 30,\n          pointBorderWidth: 2,\n          pointStyle: \"rectRounded\"\n        }, {\n          label: \"Direct\",\n          backgroundColor: \"rgb(254, 196, 0)\",\n          borderColor: \"rgba(254, 196, 0,0)\",\n          data: acqData[0].second,\n          lineTension: 0.3,\n          pointBackgroundColor: \"rgba(254, 196, 0,0)\",\n          pointHoverBackgroundColor: \"rgba(254, 196, 0,1)\",\n          pointHoverRadius: 3,\n          pointHitRadius: 30,\n          pointBorderWidth: 2,\n          pointStyle: \"rectRounded\"\n        }, {\n          label: \"Social\",\n          backgroundColor: \"rgb(41, 204, 151)\",\n          borderColor: \"rgba(41, 204, 151,0)\",\n          data: acqData[0].third,\n          lineTension: 0.3,\n          pointBackgroundColor: \"rgba(41, 204, 151,0)\",\n          pointHoverBackgroundColor: \"rgba(41, 204, 151,1)\",\n          pointHoverRadius: 3,\n          pointHitRadius: 30,\n          pointBorderWidth: 2,\n          pointStyle: \"rectRounded\"\n        }]\n      },\n      // Configuration options go here\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true,\n              color: \"#eee\",\n              zeroLineColor: \"#eee\"\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 50,\n              max: 200\n            }\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 15,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          xPadding: 20,\n          yPadding: 10,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2,\n          caretSize: 10,\n          caretPadding: 15\n        }\n      }\n    };\n    var ctx = document.getElementById(\"acquisition\").getContext(\"2d\");\n    var lineAcq = new Chart(ctx, configAcq);\n    document.getElementById(\"acqLegend\").innerHTML = lineAcq.generateLegend();\n    var items = document.querySelectorAll(\"#user-acquisition .nav-tabs .nav-item\");\n    items.forEach(function (item, index) {\n      item.addEventListener(\"click\", function () {\n        configAcq.data.datasets[0].data = acqData[index].first;\n        configAcq.data.datasets[1].data = acqData[index].second;\n        configAcq.data.datasets[2].data = acqData[index].third;\n        lineAcq.update();\n      });\n    });\n  }\n  /*======== 16. ANALYTICS - ACTIVITY CHART ========*/\n\n\n  var activity = document.getElementById(\"activity\");\n\n  if (activity !== null) {\n    var activityData = [{\n      first: [0, 65, 52, 115, 98, 165, 125],\n      second: [45, 38, 100, 87, 152, 187, 85]\n    }, {\n      first: [0, 65, 77, 33, 49, 100, 100],\n      second: [88, 33, 20, 44, 111, 140, 77]\n    }, {\n      first: [0, 40, 77, 55, 33, 116, 50],\n      second: [55, 32, 20, 55, 111, 134, 66]\n    }, {\n      first: [0, 44, 22, 77, 33, 151, 99],\n      second: [60, 32, 120, 55, 19, 134, 88]\n    }];\n    var config = {\n      // The type of chart we want to create\n      type: \"line\",\n      // The data for our dataset\n      data: {\n        labels: [\"4 Jan\", \"5 Jan\", \"6 Jan\", \"7 Jan\", \"8 Jan\", \"9 Jan\", \"10 Jan\"],\n        datasets: [{\n          label: \"Active\",\n          backgroundColor: \"transparent\",\n          borderColor: \"rgb(82, 136, 255)\",\n          data: activityData[0].first,\n          lineTension: 0,\n          pointRadius: 5,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointHoverBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 7,\n          pointHoverBorderWidth: 1\n        }, {\n          label: \"Inactive\",\n          backgroundColor: \"transparent\",\n          borderColor: \"rgb(255, 199, 15)\",\n          data: activityData[0].second,\n          lineTension: 0,\n          borderDash: [10, 5],\n          borderWidth: 1,\n          pointRadius: 5,\n          pointBackgroundColor: \"rgba(255,255,255,1)\",\n          pointHoverBackgroundColor: \"rgba(255,255,255,1)\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 7,\n          pointHoverBorderWidth: 1\n        }]\n      },\n      // Configuration options go here\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: false\n            },\n            ticks: {\n              fontColor: \"#8a909d\" // this here\n\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              fontColor: \"#8a909d\",\n              fontFamily: \"Roboto, sans-serif\",\n              display: true,\n              color: \"#eee\",\n              zeroLineColor: \"#eee\"\n            },\n            ticks: {\n              // callback: function(tick, index, array) {\n              //   return (index % 2) ? \"\" : tick;\n              // }\n              stepSize: 50,\n              fontColor: \"#8a909d\",\n              fontFamily: \"Roboto, sans-serif\"\n            }\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 15,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          xPadding: 10,\n          yPadding: 7,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2,\n          caretSize: 6,\n          caretPadding: 5\n        }\n      }\n    };\n    var ctx = document.getElementById(\"activity\").getContext(\"2d\");\n    var myLine = new Chart(ctx, config);\n    var items = document.querySelectorAll(\"#user-activity .nav-tabs .nav-item\");\n    items.forEach(function (item, index) {\n      item.addEventListener(\"click\", function () {\n        config.data.datasets[0].data = activityData[index].first;\n        config.data.datasets[1].data = activityData[index].second;\n        myLine.update();\n      });\n    });\n  }\n  /*======== 17. HORIZONTAL BAR CHART1 ========*/\n\n\n  var hbar1 = document.getElementById(\"hbar1\");\n\n  if (hbar1 !== null) {\n    var hbChart1 = new Chart(hbar1, {\n      type: \"horizontalBar\",\n      data: {\n        labels: [\"India\", \"USA\", \"Turkey\"],\n        datasets: [{\n          label: \"signup\",\n          data: [18, 13, 9.5],\n          backgroundColor: \"#4c84ff\"\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: true,\n              color: \"#eee\",\n              zeroLineColor: \"#eee\",\n              tickMarkLength: 3\n            },\n            ticks: {\n              display: true,\n              // false will hide main x-axis line\n              beginAtZero: true,\n              fontFamily: \"Roboto, sans-serif\",\n              fontColor: \"#8a909d\",\n              callback: function callback(value) {\n                return value + \" %\";\n              }\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: true,\n              beginAtZero: false,\n              fontFamily: \"Roboto, sans-serif\",\n              fontColor: \"#8a909d\",\n              fontSize: 14\n            },\n            barPercentage: 1.6,\n            categoryPercentage: 0.2\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 15,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          xPadding: 10,\n          yPadding: 7,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2,\n          caretSize: 6,\n          caretPadding: 5\n        }\n      }\n    });\n  }\n  /*======== 18. HORIZONTAL BAR CHART2 ========*/\n\n\n  var hbar2 = document.getElementById(\"hbar2\");\n\n  if (hbar2 !== null) {\n    var hbChart2 = new Chart(hbar2, {\n      type: \"horizontalBar\",\n      data: {\n        labels: [\"Florida\", \"Poland\", \"UK\"],\n        datasets: [{\n          label: \"signup\",\n          data: [7.5, 4.6, 4],\n          backgroundColor: \"#4c84ff\"\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawBorder: false,\n              display: true,\n              color: \"#eee\",\n              zeroLineColor: \"#eee\",\n              tickMarkLength: 3\n            },\n            ticks: {\n              display: true,\n              // false will hide main x-axis line\n              beginAtZero: true,\n              fontFamily: \"Roboto, sans-serif\",\n              fontColor: \"#8a909d\",\n              max: 20,\n              callback: function callback(value) {\n                return value + \"%\";\n              }\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              drawBorder: false,\n              // hide main y-axis line\n              display: false\n            },\n            ticks: {\n              display: true,\n              beginAtZero: false,\n              fontFamily: \"Roboto, sans-serif\",\n              fontColor: \"#8a909d\",\n              fontSize: 14\n            },\n            barPercentage: 1.6,\n            categoryPercentage: 0.2\n          }]\n        },\n        tooltips: {\n          mode: \"index\",\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 15,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          xPadding: 10,\n          yPadding: 7,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2,\n          caretSize: 6,\n          caretPadding: 5\n        }\n      }\n    });\n  }\n  /*======== 19. DEVICE - DOUGHNUT CHART ========*/\n\n\n  var deviceChart = document.getElementById(\"deviceChart\");\n\n  if (deviceChart !== null) {\n    var mydeviceChart = new Chart(deviceChart, {\n      type: \"doughnut\",\n      data: {\n        labels: [\"Desktop\", \"Tablet\", \"Mobile\"],\n        datasets: [{\n          label: [\"Desktop\", \"Tablet\", \"Mobile\"],\n          data: [60000, 15000, 25000],\n          backgroundColor: [\"rgba(76, 132, 255, 1)\", \"rgba(76, 132, 255, 0.85)\", \"rgba(76, 132, 255, 0.70)\"],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        cutoutPercentage: 75,\n        tooltips: {\n          callbacks: {\n            title: function title(tooltipItem, data) {\n              return data[\"labels\"][tooltipItem[0][\"index\"]];\n            },\n            label: function label(tooltipItem, data) {\n              return data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] + \" Sessions\";\n            }\n          },\n          titleFontColor: \"#888\",\n          bodyFontColor: \"#555\",\n          titleFontSize: 12,\n          bodyFontSize: 15,\n          backgroundColor: \"rgba(256,256,256,0.95)\",\n          displayColors: true,\n          xPadding: 10,\n          yPadding: 7,\n          borderColor: \"rgba(220, 220, 220, 0.9)\",\n          borderWidth: 2,\n          caretSize: 6,\n          caretPadding: 5\n        }\n      }\n    });\n  }\n});\n/*======== 20. BAR CHART ========*/\n\nvar barX = document.getElementById(\"barChart\");\n\nif (barX !== null) {\n  var myChart = new Chart(barX, {\n    type: \"bar\",\n    data: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"signup\",\n        data: [5, 6, 4.5, 5.5, 3, 6, 4.5, 6, 8, 3, 5.5, 4],\n        // data: [2, 3.2, 1.8, 2.1, 1.5, 3.5, 4, 2.3, 2.9, 4.5, 1.8, 3.4, 2.8],\n        backgroundColor: \"#4c84ff\"\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false,\n            // hide main x-axis line\n            beginAtZero: true\n          },\n          barPercentage: 1.8,\n          categoryPercentage: 0.2\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            // hide main y-axis line\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        titleFontColor: \"#888\",\n        bodyFontColor: \"#555\",\n        titleFontSize: 12,\n        bodyFontSize: 15,\n        backgroundColor: \"rgba(256,256,256,0.95)\",\n        displayColors: false,\n        borderColor: \"rgba(220, 220, 220, 0.9)\",\n        borderWidth: 2\n      }\n    }\n  });\n}\n/*======== 21. BAR CHART1 ========*/\n\n\nvar bar1 = document.getElementById(\"barChart1\");\n\nif (bar1 !== null) {\n  var myChart = new Chart(bar1, {\n    type: \"bar\",\n    data: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      datasets: [{\n        label: \"signup\",\n        data: [5, 7.5, 5.5, 6.5, 4, 9],\n        // data: [2, 3.2, 1.8, 2.1, 1.5, 3.5, 4, 2.3, 2.9, 4.5, 1.8, 3.4, 2.8],\n        backgroundColor: \"#4c84ff\"\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false,\n            // hide main x-axis line\n            beginAtZero: true\n          },\n          barPercentage: 1.8,\n          categoryPercentage: 0.2\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            // hide main y-axis line\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        enabled: false\n      }\n    }\n  });\n}\n/*======== 22. BAR CHART2 ========*/\n\n\nvar bar2 = document.getElementById(\"barChart2\");\n\nif (bar2 !== null) {\n  var myChart2 = new Chart(bar2, {\n    type: \"bar\",\n    data: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      datasets: [{\n        label: \"signup\",\n        data: [5, 7.5, 5.5, 6.5, 4, 9],\n        // data: [2, 3.2, 1.8, 2.1, 1.5, 3.5, 4, 2.3, 2.9, 4.5, 1.8, 3.4, 2.8],\n        backgroundColor: \"#ffffff\"\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false,\n            // hide main x-axis line\n            beginAtZero: true\n          },\n          barPercentage: 1.8,\n          categoryPercentage: 0.2\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            // hide main y-axis line\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        enabled: false\n      }\n    }\n  });\n}\n/*======== 23. BAR CHART3 ========*/\n\n\nvar bar3 = document.getElementById(\"barChart3\");\n\nif (bar3 !== null) {\n  var bar_Chart = new Chart(bar3, {\n    type: \"bar\",\n    data: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"signup\",\n        data: [5, 6, 4.5, 5.5, 3, 6, 4.5, 6, 8, 3, 5.5, 4],\n        // data: [2, 3.2, 1.8, 2.1, 1.5, 3.5, 4, 2.3, 2.9, 4.5, 1.8, 3.4, 2.8],\n        backgroundColor: \"#ffffff\"\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false,\n            // hide main x-axis line\n            beginAtZero: true\n          },\n          barPercentage: 1.8,\n          categoryPercentage: 0.2\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            // hide main y-axis line\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        enabled: true\n      }\n    }\n  });\n}\n/*======== 24. GRADIENT LINE CHART1 ========*/\n\n\nvar gline1 = document.getElementById(\"gline1\");\n\nif (gline1 !== null) {\n  gline1 = gline1.getContext(\"2d\");\n  var gradientFill = gline1.createLinearGradient(0, 120, 0, 0);\n  gradientFill.addColorStop(0, \"rgba(41,204,151,0.10196)\");\n  gradientFill.addColorStop(1, \"rgba(41,204,151,0.30196)\");\n  var lChart = new Chart(gline1, {\n    type: \"line\",\n    data: {\n      labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n      datasets: [{\n        label: \"Rev\",\n        lineTension: 0,\n        pointRadius: 0.1,\n        pointBackgroundColor: \"rgba(255,255,255,1)\",\n        pointBorderWidth: 2,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderColor: \"#29cc97\",\n        borderWidth: 2,\n        data: [0, 5.5, 4, 9, 4, 7, 4.7]\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false,\n            // hide main x-axis line\n            beginAtZero: true\n          },\n          barPercentage: 1.8,\n          categoryPercentage: 0.2\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            // hide main y-axis line\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        enabled: false\n      }\n    }\n  });\n}\n/*======== 25. GRADIENT LINE CHART2 ========*/\n\n\nvar gline2 = document.getElementById(\"gline2\");\n\nif (gline2 !== null) {\n  gline2 = gline2.getContext(\"2d\");\n  var gradientFill = gline2.createLinearGradient(0, 90, 0, 0);\n  gradientFill.addColorStop(0, \"rgba(255,255,255,0.10196)\");\n  gradientFill.addColorStop(1, \"rgba(255,255,255,0.30196)\");\n  var lChart2 = new Chart(gline2, {\n    type: \"line\",\n    data: {\n      labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n      datasets: [{\n        label: \"Rev\",\n        lineTension: 0,\n        pointRadius: 0.1,\n        pointBackgroundColor: \"rgba(255,255,255,1)\",\n        pointBorderWidth: 2,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderColor: \"#ffffff\",\n        borderWidth: 2,\n        data: [0, 5.5, 4, 9, 4, 7, 4.7]\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false,\n            // hide main x-axis line\n            beginAtZero: true\n          },\n          barPercentage: 1.8,\n          categoryPercentage: 0.2\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            // hide main y-axis line\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        enabled: false\n      }\n    }\n  });\n}\n/*======== 26. GRADIENT LINE CHART3 ========*/\n\n\nvar gline3 = document.getElementById(\"line3\");\n\nif (gline3 !== null) {\n  gline3 = gline3.getContext(\"2d\");\n  var gradientFill = gline3.createLinearGradient(0, 90, 0, 0);\n  gradientFill.addColorStop(0, \"rgba(255,255,255,0.10196)\");\n  gradientFill.addColorStop(1, \"rgba(255,255,255,0.30196)\");\n  var lChart3 = new Chart(gline3, {\n    type: \"line\",\n    data: {\n      labels: [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\"],\n      datasets: [{\n        label: \"Rev\",\n        lineTension: 0,\n        pointRadius: 4,\n        pointBackgroundColor: \"#29cc97\",\n        pointBorderWidth: 2,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderColor: \"#ffffff\",\n        borderWidth: 2,\n        data: [0, 4, 3, 5.5, 3, 4.7, 1]\n      }]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      layout: {\n        padding: {\n          right: 10\n        }\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: false,\n            display: false\n          },\n          ticks: {\n            display: false,\n            // hide main x-axis line\n            beginAtZero: true\n          },\n          barPercentage: 1.8,\n          categoryPercentage: 0.2\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: false,\n            // hide main y-axis line\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        enabled: true\n      }\n    }\n  });\n}\n/*======== 27. ACQUISITION3 ========*/\n\n\nvar acquisition3 = document.getElementById(\"bar3\");\n\nif (acquisition3 !== null) {\n  var acChart3 = new Chart(acquisition3, {\n    // The type of chart we want to create\n    type: \"bar\",\n    // The data for our dataset\n    data: {\n      labels: [\"4 Jan\", \"5 Jan\", \"6 Jan\", \"7 Jan\", \"8 Jan\", \"9 Jan\", \"10 Jan\"],\n      datasets: [{\n        label: \"Referral\",\n        backgroundColor: \"rgb(76, 132, 255)\",\n        borderColor: \"rgba(76, 132, 255,0)\",\n        data: [78, 90, 70, 75, 45, 52, 22],\n        pointBackgroundColor: \"rgba(76, 132, 255,0)\",\n        pointHoverBackgroundColor: \"rgba(76, 132, 255,1)\",\n        pointHoverRadius: 3,\n        pointHitRadius: 30\n      }, {\n        label: \"Direct\",\n        backgroundColor: \"rgb(254, 196, 0)\",\n        borderColor: \"rgba(254, 196, 0,0)\",\n        data: [88, 115, 80, 96, 65, 77, 38],\n        pointBackgroundColor: \"rgba(254, 196, 0,0)\",\n        pointHoverBackgroundColor: \"rgba(254, 196, 0,1)\",\n        pointHoverRadius: 3,\n        pointHitRadius: 30\n      }, {\n        label: \"Social\",\n        backgroundColor: \"rgb(41, 204, 151)\",\n        borderColor: \"rgba(41, 204, 151,0)\",\n        data: [103, 135, 102, 116, 83, 97, 55],\n        pointBackgroundColor: \"rgba(41, 204, 151,0)\",\n        pointHoverBackgroundColor: \"rgba(41, 204, 151,1)\",\n        pointHoverRadius: 3,\n        pointHitRadius: 30\n      }]\n    },\n    // Configuration options go here\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            display: true\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 50,\n            fontColor: \"#8a909d\",\n            fontFamily: \"Roboto, sans-serif\",\n            max: 200\n          }\n        }]\n      },\n      tooltips: {}\n    }\n  });\n  document.getElementById(\"customLegend\").innerHTML = acChart3.generateLegend();\n}\n/*======== 28. STATISTICS ========*/\n\n\nvar mstat = document.getElementById(\"mstat\");\n\nif (mstat !== null) {\n  var msdChart = new Chart(mstat, {\n    type: \"line\",\n    data: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n      datasets: [{\n        label: \"Old\",\n        pointRadius: 4,\n        pointBackgroundColor: \"rgba(255,255,255,1)\",\n        pointBorderWidth: 2,\n        fill: true,\n        lineTension: 0,\n        backgroundColor: \"rgba(66,208,163,0.2)\",\n        borderWidth: 2.5,\n        borderColor: \"#42d0a3\",\n        data: [10000, 17500, 2000, 11000, 19000, 10500, 18000]\n      }, {\n        label: \"New\",\n        pointRadius: 4,\n        pointBackgroundColor: \"rgba(255,255,255,1)\",\n        pointBorderWidth: 2,\n        fill: true,\n        lineTension: 0,\n        backgroundColor: \"rgba(76,132,255,0.2)\",\n        borderWidth: 2.5,\n        borderColor: \"#4c84ff\",\n        data: [2000, 11500, 10000, 14000, 11000, 16800, 14500]\n      }]\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawBorder: true,\n            display: false\n          },\n          ticks: {\n            display: true,\n            // hide main x-axis line\n            beginAtZero: true,\n            fontFamily: \"Roboto, sans-serif\",\n            fontColor: \"#8a909d\"\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            drawBorder: true,\n            // hide main y-axis line\n            display: true\n          },\n          ticks: {\n            callback: function callback(value) {\n              var ranges = [{\n                divider: 1e6,\n                suffix: \"M\"\n              }, {\n                divider: 1e3,\n                suffix: \"k\"\n              }];\n\n              function formatNumber(n) {\n                for (var i = 0; i < ranges.length; i++) {\n                  if (n >= ranges[i].divider) {\n                    return (n / ranges[i].divider).toString() + ranges[i].suffix;\n                  }\n                }\n\n                return n;\n              }\n\n              return formatNumber(value);\n            },\n            stepSize: 5000,\n            fontColor: \"#8a909d\",\n            fontFamily: \"Roboto, sans-serif\",\n            beginAtZero: true\n          }\n        }]\n      },\n      tooltips: {\n        enabled: true\n      }\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2xlZWstZGFzaGJvYXJkL2pzL2NoYXJ0cy9jaGFydC1qcy5qcz82MDk5Il0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsInJlYWR5IiwiZHVhbCIsImdldEVsZW1lbnRCeUlkIiwidXJDaGFydCIsIkNoYXJ0IiwidHlwZSIsImRhdGEiLCJsYWJlbHMiLCJkYXRhc2V0cyIsImxhYmVsIiwicG9pbnRSYWRpdXMiLCJwb2ludEJhY2tncm91bmRDb2xvciIsInBvaW50Qm9yZGVyV2lkdGgiLCJmaWxsIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsIm9wdGlvbnMiLCJyZXNwb25zaXZlIiwibWFpbnRhaW5Bc3BlY3RSYXRpbyIsImxheW91dCIsInBhZGRpbmciLCJyaWdodCIsImxlZ2VuZCIsImRpc3BsYXkiLCJzY2FsZXMiLCJ4QXhlcyIsImdyaWRMaW5lcyIsImRyYXdCb3JkZXIiLCJ0aWNrcyIsImJlZ2luQXRaZXJvIiwiYmFyUGVyY2VudGFnZSIsImNhdGVnb3J5UGVyY2VudGFnZSIsInlBeGVzIiwidG9vbHRpcHMiLCJ0aXRsZUZvbnRDb2xvciIsImJvZHlGb250Q29sb3IiLCJ0aXRsZUZvbnRTaXplIiwiYm9keUZvbnRTaXplIiwiZGlzcGxheUNvbG9ycyIsImR1YWwzIiwidXJkQ2hhcnQiLCJlbmFibGVkIiwiY3R4IiwiY2hhcnQiLCJsaW5lVGVuc2lvbiIsInBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3IiLCJwb2ludEhvdmVyUmFkaXVzIiwicG9pbnRIb3ZlckJvcmRlcldpZHRoIiwiY29sb3IiLCJ6ZXJvTGluZUNvbG9yIiwiY2FsbGJhY2siLCJ2YWx1ZSIsInJhbmdlcyIsImRpdmlkZXIiLCJzdWZmaXgiLCJmb3JtYXROdW1iZXIiLCJuIiwiaSIsImxlbmd0aCIsInRvU3RyaW5nIiwiY2FsbGJhY2tzIiwidGl0bGUiLCJ0b29sdGlwSXRlbSIsImludGVyc2VjdCIsInhQYWRkaW5nIiwieVBhZGRpbmciLCJjYXJldFNpemUiLCJjYXJldFBhZGRpbmciLCJsY2hhcnQxIiwibGNoYXJ0MiIsInVyQ2hhcnQyIiwiYXJlYSIsImFyZWFDaGFydCIsInBvaW50SGl0UmFkaXVzIiwiYXJlYTEiLCJhcmVhMiIsImFyZWEzIiwiYXJlYUNoYXJ0MyIsImxpbmUiLCJnZXRDb250ZXh0IiwiZ3JhZGllbnRGaWxsIiwiY3JlYXRlTGluZWFyR3JhZGllbnQiLCJhZGRDb2xvclN0b3AiLCJsQ2hhcnQiLCJkb3VnaG51dCIsIm15RG91Z2hudXRDaGFydCIsImN1dG91dFBlcmNlbnRhZ2UiLCJwb2xhciIsImNvbmZpZ1BvbGFyIiwicG9zaXRpb24iLCJ0b3AiLCJib3R0b20iLCJsZWZ0IiwidGV4dCIsInNjYWxlIiwiZm9udENvbG9yIiwiZm9udFNpemUiLCJzdGVwU2l6ZSIsIm1heCIsInJldmVyc2UiLCJhbmltYXRpb24iLCJhbmltYXRlUm90YXRlIiwiYW5pbWF0ZVNjYWxlIiwid2luZG93IiwibXlQb2xhckFyZWEiLCJQb2xhckFyZWEiLCJyYWRhciIsIm15UmFkYXIiLCJwb2ludEJvcmRlckNvbG9yIiwiY1VzZXIiLCJteVVDaGFydCIsImZvbnRGYW1pbHkiLCJ0aWNrIiwiaW5kZXgiLCJhcnJheSIsIm1vZGUiLCJhY3F1aXNpdGlvbiIsImFjcURhdGEiLCJmaXJzdCIsInNlY29uZCIsInRoaXJkIiwiY29uZmlnQWNxIiwicG9pbnRTdHlsZSIsImxpbmVBY3EiLCJpbm5lckhUTUwiLCJnZW5lcmF0ZUxlZ2VuZCIsIml0ZW1zIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpdGVtIiwiYWRkRXZlbnRMaXN0ZW5lciIsInVwZGF0ZSIsImFjdGl2aXR5IiwiYWN0aXZpdHlEYXRhIiwiY29uZmlnIiwiYm9yZGVyRGFzaCIsIm15TGluZSIsImhiYXIxIiwiaGJDaGFydDEiLCJ0aWNrTWFya0xlbmd0aCIsImhiYXIyIiwiaGJDaGFydDIiLCJkZXZpY2VDaGFydCIsIm15ZGV2aWNlQ2hhcnQiLCJiYXJYIiwibXlDaGFydCIsImJhcjEiLCJiYXIyIiwibXlDaGFydDIiLCJiYXIzIiwiYmFyX0NoYXJ0IiwiZ2xpbmUxIiwiZ2xpbmUyIiwibENoYXJ0MiIsImdsaW5lMyIsImxDaGFydDMiLCJhY3F1aXNpdGlvbjMiLCJhY0NoYXJ0MyIsIm1zdGF0IiwibXNkQ2hhcnQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQUEsQ0FBQyxDQUFDQyxRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQixZQUFZO0FBQzVCO0FBRUE7O0FBQ0EsTUFBSUMsSUFBSSxHQUFHRixRQUFRLENBQUNHLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBWDs7QUFDQSxNQUFJRCxJQUFJLEtBQUssSUFBYixFQUFtQjtBQUNqQixRQUFJRSxPQUFPLEdBQUcsSUFBSUMsS0FBSixDQUFVSCxJQUFWLEVBQWdCO0FBQzVCSSxNQUFBQSxJQUFJLEVBQUUsTUFEc0I7QUFFNUJDLE1BQUFBLElBQUksRUFBRTtBQUNKQyxRQUFBQSxNQUFNLEVBQUUsQ0FBQyxLQUFELEVBQVEsS0FBUixFQUFlLEtBQWYsRUFBc0IsS0FBdEIsRUFBNkIsS0FBN0IsRUFBb0MsS0FBcEMsRUFBMkMsS0FBM0MsQ0FESjtBQUVKQyxRQUFBQSxRQUFRLEVBQUUsQ0FDUjtBQUNFQyxVQUFBQSxLQUFLLEVBQUUsS0FEVDtBQUVFQyxVQUFBQSxXQUFXLEVBQUUsQ0FGZjtBQUdFQyxVQUFBQSxvQkFBb0IsRUFBRSxxQkFIeEI7QUFJRUMsVUFBQUEsZ0JBQWdCLEVBQUUsQ0FKcEI7QUFLRUMsVUFBQUEsSUFBSSxFQUFFLEtBTFI7QUFNRUMsVUFBQUEsZUFBZSxFQUFFLGFBTm5CO0FBT0VDLFVBQUFBLFdBQVcs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QUQsQ0FBTixDQUFVSCxNQURqRDtBQUdEO0FBQ0Y7O0FBQ0QsdUJBQU9FLENBQVA7QUFDRDs7QUFDRCxxQkFBT0QsWUFBWSxDQUFDSixLQUFELENBQW5CO0FBQ0QsYUFqQkk7QUFrQkw4QyxZQUFBQSxRQUFRLEVBQUUsSUFsQkw7QUFtQkxGLFlBQUFBLFNBQVMsRUFBRSxTQW5CTjtBQW9CTGdCLFlBQUFBLFVBQVUsRUFBRSxvQkFwQlA7QUFxQkxsRixZQUFBQSxXQUFXLEVBQUU7QUFyQlI7QUFMVCxTQURLO0FBZkQsT0FMRDtBQW9EUEksTUFBQUEsUUFBUSxFQUFFO0FBQ1JRLFFBQUFBLE9BQU8sRUFBRTtBQUREO0FBcERIO0FBL0JxQixHQUFqQixDQUFmO0FBd0ZEIiwic291cmNlc0NvbnRlbnQiOlsiLyogPT09PT09IEluZGV4ID09PT09PVxuXG4xLiBEVUFMIExJTkUgQ0hBUlRcbjIuIERVQUwgTElORSBDSEFSVDJcbjMuIExJTkUgQ0hBUlRcbjQuIExJTkUgQ0hBUlQxXG41LiBMSU5FIENIQVJUMlxuNi4gQVJFQSBDSEFSVFxuNy4gQVJFQSBDSEFSVDFcbjguIEFSRUEgQ0hBUlQyXG45LiBBUkVBIENIQVJUM1xuMTAuIEdSQURJRU5UIExJTkUgQ0hBUlRcbjExLiBET1VHSE5VVCBDSEFSVFxuMTIuIFBPTEFSIENIQVJUXG4xMy4gUkFEQVIgQ0hBUlRcbjE0LiBDVVJSRU5UIFVTRVIgQkFSIENIQVJUXG4xNS4gQU5BTFlUSUNTIC0gVVNFUiBBQ1FVSVNJVElPTlxuMTYuIEFOQUxZVElDUyAtIEFDVElWSVRZIENIQVJUXG4xNy4gSE9SSVpPTlRBTCBCQVIgQ0hBUlQxXG4xOC4gSE9SSVpPTlRBTCBCQVIgQ0hBUlQyXG4xOS4gREVWSUNFIC0gRE9VR0hOVVQgQ0hBUlRcbjIwLiBCQVIgQ0hBUlRcbjIxLiBCQVIgQ0hBUlQxXG4yMi4gQkFSIENIQVJUMlxuMjMuIEJBUiBDSEFSVDNcbjI0LiBHUkFESUVOVCBMSU5FIENIQVJUMVxuMjUuIEdSQURJRU5UIExJTkUgQ0hBUlQyXG4yNi4gR1JBRElFTlQgTElORSBDSEFSVDNcbjI3LiBBQ1FVSVNJVElPTjNcbjI4LiBTVEFUSVNUSUNTXG5cbj09PT09PSBFbmQgPT09PT09Ki9cblxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICAvKj09PT09PT09IDEuIERVQUwgTElORSBDSEFSVCA9PT09PT09PSovXG4gIHZhciBkdWFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkdWFsLWxpbmVcIik7XG4gIGlmIChkdWFsICE9PSBudWxsKSB7XG4gICAgdmFyIHVyQ2hhcnQgPSBuZXcgQ2hhcnQoZHVhbCwge1xuICAgICAgdHlwZTogXCJsaW5lXCIsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGxhYmVsczogW1wiRnJpXCIsIFwiU2F0XCIsIFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCJdLFxuICAgICAgICBkYXRhc2V0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIk9sZFwiLFxuICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDQsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NSwyNTUsMjU1LDEpXCIsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgZmlsbDogZmFsc2UsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwiI2ZkYzUwNlwiLFxuICAgICAgICAgICAgZGF0YTogWzAsIDQsIDMsIDUuNSwgMywgNC43LCAwXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiTmV3XCIsXG4gICAgICAgICAgICBmaWxsOiBmYWxzZSxcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiA0LFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCIjNGM4NGZmXCIsXG4gICAgICAgICAgICBkYXRhOiBbMCwgMiwgNC4zLCAzLjgsIDUuMiwgMS44LCAyLjJdXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgbGF5b3V0OiB7XG4gICAgICAgICAgcGFkZGluZzoge1xuICAgICAgICAgICAgcmlnaHQ6IDEwXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHNjYWxlczoge1xuICAgICAgICAgIHhBeGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsIC8vIGhpZGUgbWFpbiB4LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDEuOCxcbiAgICAgICAgICAgICAgY2F0ZWdvcnlQZXJjZW50YWdlOiAwLjJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLCAvLyBoaWRlIG1haW4geS1heGlzIGxpbmVcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwiIzg4OFwiLFxuICAgICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICAgIHRpdGxlRm9udFNpemU6IDEyLFxuICAgICAgICAgIGJvZHlGb250U2l6ZTogMTQsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgICBkaXNwbGF5Q29sb3JzOiB0cnVlLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMjIwLCAyMjAsIDIyMCwgMC45KVwiLFxuICAgICAgICAgIGJvcmRlcldpZHRoOiAyXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvKj09PT09PT09IDEuIERVQUwgTElORSBDSEFSVDIgPT09PT09PT0qL1xuICB2YXIgZHVhbDMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImR1YWwtbGluZTNcIik7XG4gIGlmIChkdWFsMyAhPT0gbnVsbCkge1xuICAgIHZhciB1cmRDaGFydCA9IG5ldyBDaGFydChkdWFsMywge1xuICAgICAgdHlwZTogXCJsaW5lXCIsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGxhYmVsczogW1wiRnJpXCIsIFwiU2F0XCIsIFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCJdLFxuICAgICAgICBkYXRhc2V0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIk9sZFwiLFxuICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDQsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCIjZmVjNDAwXCIsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgZmlsbDogZmFsc2UsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwiI2ZjZGY4MFwiLFxuICAgICAgICAgICAgZGF0YTogWzAsIDQsIDMsIDUuNSwgMywgNC43LCAwXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiTmV3XCIsXG4gICAgICAgICAgICBmaWxsOiBmYWxzZSxcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiA0LFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwiI2ZlYzQwMFwiLFxuICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICBkYXRhOiBbMCwgMiwgNC4zLCAzLjgsIDUuMiwgMS44LCAyLjJdXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgbGF5b3V0OiB7XG4gICAgICAgICAgcGFkZGluZzoge1xuICAgICAgICAgICAgcmlnaHQ6IDEwXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICB4QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLCAvLyBoaWRlIG1haW4geC1heGlzIGxpbmVcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBiYXJQZXJjZW50YWdlOiAxLjgsXG4gICAgICAgICAgICAgIGNhdGVnb3J5UGVyY2VudGFnZTogMC4yXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICB5QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSwgLy8gaGlkZSBtYWluIHktYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICB0b29sdGlwczoge1xuICAgICAgICAgIGVuYWJsZWQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIC8qPT09PT09PT0gMy4gTElORSBDSEFSVCA9PT09PT09PSovXG4gIHZhciBjdHggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpbmVjaGFydFwiKTtcbiAgaWYgKGN0eCAhPT0gbnVsbCkge1xuICAgIHZhciBjaGFydCA9IG5ldyBDaGFydChjdHgsIHtcbiAgICAgIC8vIFRoZSB0eXBlIG9mIGNoYXJ0IHdlIHdhbnQgdG8gY3JlYXRlXG4gICAgICB0eXBlOiBcImxpbmVcIixcblxuICAgICAgLy8gVGhlIGRhdGEgZm9yIG91ciBkYXRhc2V0XG4gICAgICBkYXRhOiB7XG4gICAgICAgIGxhYmVsczogW1xuICAgICAgICAgIFwiSmFuXCIsXG4gICAgICAgICAgXCJGZWJcIixcbiAgICAgICAgICBcIk1hclwiLFxuICAgICAgICAgIFwiQXByXCIsXG4gICAgICAgICAgXCJNYXlcIixcbiAgICAgICAgICBcIkp1blwiLFxuICAgICAgICAgIFwiSnVsXCIsXG4gICAgICAgICAgXCJBdWdcIixcbiAgICAgICAgICBcIlNlcFwiLFxuICAgICAgICAgIFwiT2N0XCIsXG4gICAgICAgICAgXCJOb3ZcIixcbiAgICAgICAgICBcIkRlY1wiXG4gICAgICAgIF0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiXCIsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYig4MiwgMTM2LCAyNTUpXCIsXG4gICAgICAgICAgICBkYXRhOiBbXG4gICAgICAgICAgICAgIDEwMCxcbiAgICAgICAgICAgICAgMTEwMDAsXG4gICAgICAgICAgICAgIDEwMDAwLFxuICAgICAgICAgICAgICAxNDAwMCxcbiAgICAgICAgICAgICAgMTEwMDAsXG4gICAgICAgICAgICAgIDE3MDAwLFxuICAgICAgICAgICAgICAxNDUwMCxcbiAgICAgICAgICAgICAgMTgwMDAsXG4gICAgICAgICAgICAgIDUwMDAsXG4gICAgICAgICAgICAgIDIzMDAwLFxuICAgICAgICAgICAgICAxNDAwMCxcbiAgICAgICAgICAgICAgMTkwMDBcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBsaW5lVGVuc2lvbjogMC4zLFxuICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDUsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NSwyNTUsMjU1LDEpXCIsXG4gICAgICAgICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU1LDI1NSwyNTUsMSlcIixcbiAgICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgICBwb2ludEhvdmVyUmFkaXVzOiA4LFxuICAgICAgICAgICAgcG9pbnRIb3ZlckJvcmRlcldpZHRoOiAxXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuXG4gICAgICAvLyBDb25maWd1cmF0aW9uIG9wdGlvbnMgZ28gaGVyZVxuICAgICAgb3B0aW9uczoge1xuICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgbGF5b3V0OiB7XG4gICAgICAgICAgcGFkZGluZzoge1xuICAgICAgICAgICAgcmlnaHQ6IDEwXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICB4QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICB5QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiNlZWVcIixcbiAgICAgICAgICAgICAgICB6ZXJvTGluZUNvbG9yOiBcIiNlZWVcIixcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICB2YXIgcmFuZ2VzID0gW1xuICAgICAgICAgICAgICAgICAgICB7IGRpdmlkZXI6IDFlNiwgc3VmZml4OiBcIk1cIiB9LFxuICAgICAgICAgICAgICAgICAgICB7IGRpdmlkZXI6IDFlNCwgc3VmZml4OiBcImtcIiB9XG4gICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gZm9ybWF0TnVtYmVyKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByYW5nZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAobiA+PSByYW5nZXNbaV0uZGl2aWRlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKG4gLyByYW5nZXNbaV0uZGl2aWRlcikudG9TdHJpbmcoKSArIHJhbmdlc1tpXS5zdWZmaXhcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdE51bWJlcih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICB0b29sdGlwczoge1xuICAgICAgICAgIGNhbGxiYWNrczoge1xuICAgICAgICAgICAgdGl0bGU6IGZ1bmN0aW9uICh0b29sdGlwSXRlbSwgZGF0YSkge1xuICAgICAgICAgICAgICByZXR1cm4gZGF0YVtcImxhYmVsc1wiXVt0b29sdGlwSXRlbVswXVtcImluZGV4XCJdXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsYWJlbDogZnVuY3Rpb24gKHRvb2x0aXBJdGVtLCBkYXRhKSB7XG4gICAgICAgICAgICAgIHJldHVybiBcIiRcIiArIGRhdGFbXCJkYXRhc2V0c1wiXVswXVtcImRhdGFcIl1bdG9vbHRpcEl0ZW1bXCJpbmRleFwiXV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICAgIGludGVyc2VjdDogZmFsc2UsXG4gICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICB0aXRsZUZvbnRDb2xvcjogXCIjODg4XCIsXG4gICAgICAgICAgYm9keUZvbnRDb2xvcjogXCIjNTU1XCIsXG4gICAgICAgICAgdGl0bGVGb250U2l6ZTogMTIsXG4gICAgICAgICAgYm9keUZvbnRTaXplOiAxOCxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTYsMjU2LDI1NiwwLjk1KVwiLFxuICAgICAgICAgIHhQYWRkaW5nOiAyMCxcbiAgICAgICAgICB5UGFkZGluZzogMTAsXG4gICAgICAgICAgZGlzcGxheUNvbG9yczogZmFsc2UsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSgyMjAsIDIyMCwgMjIwLCAwLjkpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgY2FyZXRTaXplOiAxMCxcbiAgICAgICAgICBjYXJldFBhZGRpbmc6IDE1XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvKj09PT09PT09IDQuIExJTkUgQ0hBUlQxID09PT09PT09Ki9cbiAgdmFyIGxjaGFydDEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpbmVjaGFydDFcIik7XG4gIGlmIChsY2hhcnQxICE9PSBudWxsKSB7XG4gICAgdmFyIHVyQ2hhcnQgPSBuZXcgQ2hhcnQobGNoYXJ0MSwge1xuICAgICAgdHlwZTogXCJsaW5lXCIsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGxhYmVsczogW1wiRnJpXCIsIFwiU2F0XCIsIFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCJdLFxuICAgICAgICBkYXRhc2V0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIk9sZFwiLFxuICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDAsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NSwyNTUsMjU1LDEpXCIsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgZmlsbDogZmFsc2UsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwiI2ZjZGY4MFwiLFxuICAgICAgICAgICAgZGF0YTogWzAsIDUsIDIuNSwgOS41LCAzLjMsIDgsIDBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJOZXdcIixcbiAgICAgICAgICAgIGZpbGw6IGZhbHNlLFxuICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDAsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NSwyNTUsMjU1LDEpXCIsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gICAgICAgICAgICBib3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBcIiM0Yzg0ZmZcIixcbiAgICAgICAgICAgIGRhdGE6IFswLCAyLCA2LCA1LCA4LjUsIDMsIDMuOF1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICB4QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLCAvLyBoaWRlIG1haW4geC1heGlzIGxpbmVcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBiYXJQZXJjZW50YWdlOiAxLjgsXG4gICAgICAgICAgICAgIGNhdGVnb3J5UGVyY2VudGFnZTogMC4yXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICB5QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSwgLy8gaGlkZSBtYWluIHktYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICB0b29sdGlwczoge1xuICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvKj09PT09PT09IDUuIExJTkUgQ0hBUlQyID09PT09PT09Ki9cbiAgdmFyIGxjaGFydDIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpbmVjaGFydDJcIik7XG4gIGlmIChsY2hhcnQyICE9PSBudWxsKSB7XG4gICAgdmFyIHVyQ2hhcnQyID0gbmV3IENoYXJ0KGxjaGFydDIsIHtcbiAgICAgIHR5cGU6IFwibGluZVwiLFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcIkZyaVwiLCBcIlNhdFwiLCBcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiXSxcbiAgICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJPbGRcIixcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiAwLFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIGZpbGw6IGZhbHNlLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gICAgICAgICAgICBib3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBcIiNmY2RmODBcIixcbiAgICAgICAgICAgIGRhdGE6IFswLCA1LCAyLjUsIDkuNSwgMy4zLCA4LCAwXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiTmV3XCIsXG4gICAgICAgICAgICBmaWxsOiBmYWxzZSxcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiAwLFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICBkYXRhOiBbMCwgMiwgNiwgNSwgOC41LCAzLCAzLjhdXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS44LFxuICAgICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgLyo9PT09PT09PSA2LiBBUkVBIENIQVJUID09PT09PT09Ki9cbiAgdmFyIGFyZWEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFyZWEtY2hhcnRcIik7XG4gIGlmIChhcmVhICE9PSBudWxsKSB7XG4gICAgdmFyIGFyZWFDaGFydCA9IG5ldyBDaGFydChhcmVhLCB7XG4gICAgICB0eXBlOiBcImxpbmVcIixcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbGFiZWxzOiBbXCJGcmlcIiwgXCJTYXRcIiwgXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIl0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiTmV3XCIsXG4gICAgICAgICAgICBwb2ludEhpdFJhZGl1czogMTAsXG4gICAgICAgICAgICBwb2ludFJhZGl1czogMCxcbiAgICAgICAgICAgIGZpbGw6IHRydWUsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg3NiwgMTMyLCAyNTUsIDAuOSlcIixcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYmEoNzYsIDEzMiwgMjU1LCAwLjkpXCIsXG4gICAgICAgICAgICBkYXRhOiBbMCwgNCwgMiwgNi41LCAzLCA0LjcsIDBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJPbGRcIixcbiAgICAgICAgICAgIHBvaW50SGl0UmFkaXVzOiAxMCxcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiAwLFxuICAgICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1MywgMTk3LCA2LCAwLjkpXCIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDI1MywgMTk3LCA2LCAxKVwiLFxuICAgICAgICAgICAgZGF0YTogWzAsIDIsIDQuMywgMy44LCA1LjIsIDEuOCwgMi4yXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIGxheW91dDoge1xuICAgICAgICAgIHBhZGRpbmc6IHtcbiAgICAgICAgICAgIHJpZ2h0OiAxMFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS44LFxuICAgICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgICB0aXRsZUZvbnRDb2xvcjogXCIjODg4XCIsXG4gICAgICAgICAgYm9keUZvbnRDb2xvcjogXCIjNTU1XCIsXG4gICAgICAgICAgdGl0bGVGb250U2l6ZTogMTIsXG4gICAgICAgICAgYm9keUZvbnRTaXplOiAxNCxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTYsMjU2LDI1NiwwLjk1KVwiLFxuICAgICAgICAgIGRpc3BsYXlDb2xvcnM6IHRydWUsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSgyMjAsIDIyMCwgMjIwLCAwLjkpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIC8qPT09PT09PT0gNy4gQVJFQSBDSEFSVDEgPT09PT09PT0qL1xuICB2YXIgYXJlYTEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFyZWFDaGFydDFcIik7XG4gIGlmIChhcmVhMSAhPT0gbnVsbCkge1xuICAgIHZhciBhcmVhQ2hhcnQgPSBuZXcgQ2hhcnQoYXJlYTEsIHtcbiAgICAgIHR5cGU6IFwibGluZVwiLFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcIkZyaVwiLCBcIlNhdFwiLCBcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiXSxcbiAgICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJOZXdcIixcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiAwLjEsXG4gICAgICAgICAgICBmaWxsOiB0cnVlLFxuICAgICAgICAgICAgbGluZVRlbnNpb246IDAuMyxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDc2LCAxMzIsIDI1NSwgMC45KVwiLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSg3NiwgMTMyLCAyNTUsIDAuOSlcIixcbiAgICAgICAgICAgIGRhdGE6IFswLCA1LCAyLjUsIDksIDMuNSwgNi41LCAwXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiT2xkXCIsXG4gICAgICAgICAgICBwb2ludFJhZGl1czogMC4xLFxuICAgICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICAgIGxpbmVUZW5zaW9uOiAwLjMsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTMsIDE5NywgNiwgMC45KVwiLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSgyNTMsIDE5NywgNiwgMSlcIixcbiAgICAgICAgICAgIGRhdGE6IFswLCAyLCA1LjUsIDIuNiwgNS43LCA0LCAyLjhdXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS44LFxuICAgICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKj09PT09PT09IDguIEFSRUEgQ0hBUlQyID09PT09PT09Ki9cbiAgdmFyIGFyZWEyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcmVhQ2hhcnQyXCIpO1xuICBpZiAoYXJlYTIgIT09IG51bGwpIHtcbiAgICB2YXIgYXJlYUNoYXJ0ID0gbmV3IENoYXJ0KGFyZWEyLCB7XG4gICAgICB0eXBlOiBcImxpbmVcIixcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbGFiZWxzOiBbXCJGcmlcIiwgXCJTYXRcIiwgXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIl0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiTmV3XCIsXG4gICAgICAgICAgICBwb2ludFJhZGl1czogMC4xLFxuICAgICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICAgIGxpbmVUZW5zaW9uOiAwLjYsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpXCIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDI1NSwgMjU1LCAyNTUsMClcIixcbiAgICAgICAgICAgIGRhdGE6IFswLCA1LCAyLjUsIDksIDMuNSwgNi41LCAwXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiT2xkXCIsXG4gICAgICAgICAgICBwb2ludFJhZGl1czogMC4xLFxuICAgICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICAgIGxpbmVUZW5zaW9uOiAwLjYsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpXCIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDApXCIsXG4gICAgICAgICAgICBkYXRhOiBbMCwgMiwgNS41LCAyLjYsIDUuNywgNCwgMi44XVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHNjYWxlczoge1xuICAgICAgICAgIHhBeGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsIC8vIGhpZGUgbWFpbiB4LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDEuOCxcbiAgICAgICAgICAgICAgY2F0ZWdvcnlQZXJjZW50YWdlOiAwLjJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLCAvLyBoaWRlIG1haW4geS1heGlzIGxpbmVcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyo9PT09PT09PSA5LiBBUkVBIENIQVJUMyA9PT09PT09PSovXG4gIHZhciBhcmVhMyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXJlYS1jaGFydDNcIik7XG4gIGlmIChhcmVhMyAhPT0gbnVsbCkge1xuICAgIHZhciBhcmVhQ2hhcnQzID0gbmV3IENoYXJ0KGFyZWEzLCB7XG4gICAgICB0eXBlOiBcImxpbmVcIixcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbGFiZWxzOiBbXCJGcmlcIiwgXCJTYXRcIiwgXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIl0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiTmV3XCIsXG4gICAgICAgICAgICBwb2ludEhpdFJhZGl1czogMTAsXG4gICAgICAgICAgICBwb2ludFJhZGl1czogMCxcbiAgICAgICAgICAgIGZpbGw6IHRydWUsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpXCIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDI1NSwgMjU1LCAyNTUsMClcIixcbiAgICAgICAgICAgIGRhdGE6IFswLCA0LCAyLCA2LjUsIDMsIDQuNywgMF1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIk9sZFwiLFxuICAgICAgICAgICAgcG9pbnRIaXRSYWRpdXM6IDEwLFxuICAgICAgICAgICAgcG9pbnRSYWRpdXM6IDAsXG4gICAgICAgICAgICBmaWxsOiB0cnVlLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KVwiLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSgyNTUsIDI1NSwgMjU1LCAwKVwiLFxuICAgICAgICAgICAgZGF0YTogWzAsIDIsIDQuMywgMy44LCA1LjIsIDEuOCwgMi4yXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIGxheW91dDoge1xuICAgICAgICAgIHBhZGRpbmc6IHtcbiAgICAgICAgICAgIHJpZ2h0OiAxMFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS44LFxuICAgICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgICBlbmFibGVkOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvKj09PT09PT09IDEwLiBHUkFESUVOVCBMSU5FIENIQVJUID09PT09PT09Ki9cbiAgdmFyIGxpbmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpbmVcIik7XG4gIGlmIChsaW5lICE9PSBudWxsKSB7XG4gICAgbGluZSA9IGxpbmUuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgIHZhciBncmFkaWVudEZpbGwgPSBsaW5lLmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDEyMCwgMCwgMCk7XG4gICAgZ3JhZGllbnRGaWxsLmFkZENvbG9yU3RvcCgwLCBcInJnYmEoNDEsMjA0LDE1MSwwLjEwMTk2KVwiKTtcbiAgICBncmFkaWVudEZpbGwuYWRkQ29sb3JTdG9wKDEsIFwicmdiYSg0MSwyMDQsMTUxLDAuMzAxOTYpXCIpO1xuXG4gICAgdmFyIGxDaGFydCA9IG5ldyBDaGFydChsaW5lLCB7XG4gICAgICB0eXBlOiBcImxpbmVcIixcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbGFiZWxzOiBbXCJGcmlcIiwgXCJTYXRcIiwgXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIl0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiUmV2XCIsXG4gICAgICAgICAgICBsaW5lVGVuc2lvbjogMCxcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiA0LFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIGZpbGw6IHRydWUsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RmlsbCxcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBcIiMyOWNjOTdcIixcbiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgZGF0YTogWzAsIDQsIDMsIDUuNSwgMywgNC43LCAxXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIGxheW91dDoge1xuICAgICAgICAgIHBhZGRpbmc6IHtcbiAgICAgICAgICAgIHJpZ2h0OiAxMFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS44LFxuICAgICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgICB0aXRsZUZvbnRDb2xvcjogXCIjODg4XCIsXG4gICAgICAgICAgYm9keUZvbnRDb2xvcjogXCIjNTU1XCIsXG4gICAgICAgICAgdGl0bGVGb250U2l6ZTogMTIsXG4gICAgICAgICAgYm9keUZvbnRTaXplOiAxNCxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTYsMjU2LDI1NiwwLjk1KVwiLFxuICAgICAgICAgIGRpc3BsYXlDb2xvcnM6IHRydWUsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSgyMjAsIDIyMCwgMjIwLCAwLjkpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDJcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIC8qPT09PT09PT0gMTEuIERPVUdITlVUIENIQVJUID09PT09PT09Ki9cbiAgdmFyIGRvdWdobnV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkb0NoYXJ0XCIpO1xuICBpZiAoZG91Z2hudXQgIT09IG51bGwpIHtcbiAgICB2YXIgbXlEb3VnaG51dENoYXJ0ID0gbmV3IENoYXJ0KGRvdWdobnV0LCB7XG4gICAgICB0eXBlOiBcImRvdWdobnV0XCIsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGxhYmVsczogW1wiY29tcGxldGVkXCIsIFwidW5wYWlkXCIsIFwicGVuZGluZ1wiLCBcImNhbmNlbGVkXCJdLFxuICAgICAgICBkYXRhc2V0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBbXCJjb21wbGV0ZWRcIiwgXCJ1bnBhaWRcIiwgXCJwZW5kaW5nXCIsIFwiY2FuY2VsZWRcIl0sXG4gICAgICAgICAgICBkYXRhOiBbNDEwMCwgMjUwMCwgMTgwMCwgMjMwMF0sXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFtcIiM0Yzg0ZmZcIiwgXCIjMjljYzk3XCIsIFwiIzgwNjFlZlwiLCBcIiNmZWM0MDJcIl0sXG4gICAgICAgICAgICBib3JkZXJXaWR0aDogMVxuICAgICAgICAgICAgLy8gYm9yZGVyQ29sb3I6IFsnIzRjODRmZicsJyMyOWNjOTcnLCcjODA2MWVmJywnI2ZlYzQwMiddXG4gICAgICAgICAgICAvLyBob3ZlckJvcmRlckNvbG9yOiBbJyM0Yzg0ZmYnLCAnIzI5Y2M5NycsICcjODA2MWVmJywgJyNmZWM0MDInXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIGN1dG91dFBlcmNlbnRhZ2U6IDc1LFxuICAgICAgICB0b29sdGlwczoge1xuICAgICAgICAgIGNhbGxiYWNrczoge1xuICAgICAgICAgICAgdGl0bGU6IGZ1bmN0aW9uICh0b29sdGlwSXRlbSwgZGF0YSkge1xuICAgICAgICAgICAgICByZXR1cm4gXCJPcmRlciA6IFwiICsgZGF0YVtcImxhYmVsc1wiXVt0b29sdGlwSXRlbVswXVtcImluZGV4XCJdXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsYWJlbDogZnVuY3Rpb24gKHRvb2x0aXBJdGVtLCBkYXRhKSB7XG4gICAgICAgICAgICAgIHJldHVybiBkYXRhW1wiZGF0YXNldHNcIl1bMF1bXCJkYXRhXCJdW3Rvb2x0aXBJdGVtW1wiaW5kZXhcIl1dO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwiIzg4OFwiLFxuICAgICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICAgIHRpdGxlRm9udFNpemU6IDEyLFxuICAgICAgICAgIGJvZHlGb250U2l6ZTogMTQsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgICBkaXNwbGF5Q29sb3JzOiB0cnVlLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMjIwLCAyMjAsIDIyMCwgMC45KVwiLFxuICAgICAgICAgIGJvcmRlcldpZHRoOiAyXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvKj09PT09PT09IDEyLiBQT0xBUiBDSEFSVCA9PT09PT09PSovXG4gIHZhciBwb2xhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicG9sYXJcIik7XG4gIGlmIChwb2xhciAhPT0gbnVsbCkge1xuICAgIHZhciBjb25maWdQb2xhciA9IHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBkYXRhOiBbNDMsIDIzLCA1MywgMzMsIDU1XSxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogW1xuICAgICAgICAgICAgICBcInJnYmEoNDEsMjA0LDE1MSwwLjUpXCIsXG4gICAgICAgICAgICAgIFwicmdiYSgyNTQsODgsMTAxLDAuNSlcIixcbiAgICAgICAgICAgICAgXCJyZ2JhKDEyOCw5NywyMzksMC41KVwiLFxuICAgICAgICAgICAgICBcInJnYmEoMjU0LDE5NiwwLDAuNSlcIixcbiAgICAgICAgICAgICAgXCJyZ2JhKDc2LDEzMiwyNTUsMC41KVwiXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbGFiZWw6IFwiXCIgLy8gZm9yIGxlZ2VuZFxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgbGFiZWxzOiBbXCJUb3RhbCBTYWxlc1wiLCBcIlJlamVjdGVkXCIsIFwiQ29tcGxldGVkXCIsIFwiUGVuZGluZ1wiLCBcIlJlc2VydmVcIl1cbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICBwb3NpdGlvbjogXCJyaWdodFwiLFxuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIGxheW91dDoge1xuICAgICAgICAgIHBhZGRpbmc6IHtcbiAgICAgICAgICAgIHRvcDogMTAsXG4gICAgICAgICAgICBib3R0b206IDEwLFxuICAgICAgICAgICAgcmlnaHQ6IDEwLFxuICAgICAgICAgICAgbGVmdDogMTBcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgdGV4dDogXCJDaGFydC5qcyBQb2xhciBBcmVhIENoYXJ0XCJcbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGU6IHtcbiAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsXG4gICAgICAgICAgICBmb250Q29sb3I6IFwiIzFiMjIzY1wiLFxuICAgICAgICAgICAgZm9udFNpemU6IDEyLFxuICAgICAgICAgICAgc3RlcFNpemU6IDEwLFxuICAgICAgICAgICAgbWF4OiA2MFxuICAgICAgICAgIH0sXG4gICAgICAgICAgcmV2ZXJzZTogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgYW5pbWF0aW9uOiB7XG4gICAgICAgICAgYW5pbWF0ZVJvdGF0ZTogZmFsc2UsXG4gICAgICAgICAgYW5pbWF0ZVNjYWxlOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwiIzg4OFwiLFxuICAgICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICAgIHRpdGxlRm9udFNpemU6IDEyLFxuICAgICAgICAgIGJvZHlGb250U2l6ZTogMTQsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgICBkaXNwbGF5Q29sb3JzOiB0cnVlLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMjIwLCAyMjAsIDIyMCwgMC45KVwiLFxuICAgICAgICAgIGJvcmRlcldpZHRoOiAyXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIHdpbmRvdy5teVBvbGFyQXJlYSA9IENoYXJ0LlBvbGFyQXJlYShwb2xhciwgY29uZmlnUG9sYXIpO1xuICB9XG5cbiAgLyo9PT09PT09PSAxMy4gUkFEQVIgQ0hBUlQgPT09PT09PT0qL1xuICB2YXIgcmFkYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJhZGFyXCIpO1xuICBpZiAocmFkYXIgIT09IG51bGwpIHtcbiAgICB2YXIgbXlSYWRhciA9IG5ldyBDaGFydChyYWRhciwge1xuICAgICAgdHlwZTogXCJyYWRhclwiLFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcbiAgICAgICAgICBcIkphbnVhcnlcIixcbiAgICAgICAgICBcIkZlYnJ1YXJ5XCIsXG4gICAgICAgICAgXCJNYXJjaFwiLFxuICAgICAgICAgIFwiQXByaWxcIixcbiAgICAgICAgICBcIk1heVwiLFxuICAgICAgICAgIFwiSnVuZVwiLFxuICAgICAgICAgIFwiSnVseVwiLFxuICAgICAgICAgIFwiQXVndXN0XCIsXG4gICAgICAgICAgXCJTZXB0ZW1iZXJcIixcbiAgICAgICAgICBcIk9jdG9iZXJcIixcbiAgICAgICAgICBcIk5vdmVtYmVyXCIsXG4gICAgICAgICAgXCJEZWNlbWJlclwiXG4gICAgICAgIF0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiQ3VycmVudCBZZWFyXCIsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg3NiwxMzIsMjU1LDAuMilcIixcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBcIiM0Yzg0ZmZcIixcbiAgICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgICBwb2ludFJhZGl1czogNCxcbiAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6IFwicmdiYSg3NiwxMzIsMjU1LDEpXCIsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICBkYXRhOiBbMjUsIDMxLCA0MywgNDgsIDIxLCAzNiwgMjMsIDEyLCAzMywgMzYsIDI4LCA1NV1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIlByZXZpb3VzIFllYXJcIixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDQxLCAyMDQsIDE1MSwgMC4yKVwiLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwiIzI5Y2M5N1wiLFxuICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMixcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiA0LFxuICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogXCIjMjljYzk3XCIsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgICBkYXRhOiBbNDUsIDc3LCAyMiwgMTIsIDU2LCA0MywgNzEsIDIzLCA1NCwgMTksIDMyLCA1NV1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICB0aXRsZToge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgIHRleHQ6IFwiQ2hhcnQuanMgUmFkYXIgQ2hhcnRcIlxuICAgICAgICB9LFxuICAgICAgICBsYXlvdXQ6IHtcbiAgICAgICAgICBwYWRkaW5nOiB7XG4gICAgICAgICAgICB0b3A6IDEwLFxuICAgICAgICAgICAgYm90dG9tOiAxMCxcbiAgICAgICAgICAgIHJpZ2h0OiAxMCxcbiAgICAgICAgICAgIGxlZnQ6IDEwXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzY2FsZToge1xuICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZSxcbiAgICAgICAgICAgIGZvbnRDb2xvcjogXCIjMWIyMjNjXCIsXG4gICAgICAgICAgICBmb250U2l6ZTogMTIsXG4gICAgICAgICAgICBzdGVwU2l6ZTogMTAsXG4gICAgICAgICAgICBtYXg6IDYwXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB0b29sdGlwczoge1xuICAgICAgICAgIHRpdGxlRm9udENvbG9yOiBcIiM4ODhcIixcbiAgICAgICAgICBib2R5Rm9udENvbG9yOiBcIiM1NTVcIixcbiAgICAgICAgICB0aXRsZUZvbnRTaXplOiAxMixcbiAgICAgICAgICBib2R5Rm9udFNpemU6IDE0LFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NiwyNTYsMjU2LDAuOTUpXCIsXG4gICAgICAgICAgZGlzcGxheUNvbG9yczogdHJ1ZSxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDIyMCwgMjIwLCAyMjAsIDAuOSlcIixcbiAgICAgICAgICBib3JkZXJXaWR0aDogMlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgLyo9PT09PT09PSAxNC4gQ1VSUkVOVCBVU0VSIEJBUiBDSEFSVCA9PT09PT09PSovXG4gIHZhciBjVXNlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY3VycmVudFVzZXJcIik7XG4gIGlmIChjVXNlciAhPT0gbnVsbCkge1xuICAgIHZhciBteVVDaGFydCA9IG5ldyBDaGFydChjVXNlciwge1xuICAgICAgdHlwZTogXCJiYXJcIixcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgbGFiZWxzOiBbXG4gICAgICAgICAgXCIxaFwiLFxuICAgICAgICAgIFwiMTAgbVwiLFxuICAgICAgICAgIFwiNTAgbVwiLFxuICAgICAgICAgIFwiMzAgbVwiLFxuICAgICAgICAgIFwiNDAgbVwiLFxuICAgICAgICAgIFwiMjAgbVwiLFxuICAgICAgICAgIFwiMzAgbVwiLFxuICAgICAgICAgIFwiMjUgbVwiLFxuICAgICAgICAgIFwiMjAgbVwiLFxuICAgICAgICAgIFwiNSBtXCIsXG4gICAgICAgICAgXCIxMCBtXCJcbiAgICAgICAgXSxcbiAgICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJzaWdudXBcIixcbiAgICAgICAgICAgIGRhdGE6IFsxNSwgMzAsIDI3LCA0MywgMzksIDE4LCA0MiwgMjUsIDEzLCAxOCwgNTldLFxuICAgICAgICAgICAgLy8gZGF0YTogWzIsIDMuMiwgMS44LCAyLjEsIDEuNSwgMy41LCA0LCAyLjMsIDIuOSwgNC41LCAxLjgsIDMuNCwgMi44XSxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjNGM4NGZmXCJcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICB4QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiB0cnVlLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIGZvbnRDb2xvcjogXCIjOGE5MDlkXCIsXG4gICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJSb2JvdG8sIHNhbnMtc2VyaWZcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsXG4gICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICh0aWNrLCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpbmRleCAlIDIgPyBcIlwiIDogdGljaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDEuOCxcbiAgICAgICAgICAgICAgY2F0ZWdvcnlQZXJjZW50YWdlOiAwLjJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjZWVlXCIsXG4gICAgICAgICAgICAgICAgemVyb0xpbmVDb2xvcjogXCIjZWVlXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzhhOTA5ZFwiLFxuICAgICAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiUm9ib3RvLCBzYW5zLXNlcmlmXCIsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9LFxuXG4gICAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgICAgbW9kZTogXCJpbmRleFwiLFxuICAgICAgICAgIHRpdGxlRm9udENvbG9yOiBcIiM4ODhcIixcbiAgICAgICAgICBib2R5Rm9udENvbG9yOiBcIiM1NTVcIixcbiAgICAgICAgICB0aXRsZUZvbnRTaXplOiAxMixcbiAgICAgICAgICBib2R5Rm9udFNpemU6IDE1LFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NiwyNTYsMjU2LDAuOTUpXCIsXG4gICAgICAgICAgZGlzcGxheUNvbG9yczogdHJ1ZSxcbiAgICAgICAgICB4UGFkZGluZzogMTAsXG4gICAgICAgICAgeVBhZGRpbmc6IDcsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSgyMjAsIDIyMCwgMjIwLCAwLjkpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgY2FyZXRTaXplOiA2LFxuICAgICAgICAgIGNhcmV0UGFkZGluZzogNVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgLyo9PT09PT09PSAxNS4gQU5BTFlUSUNTIC0gVVNFUiBBQ1FVSVNJVElPTiA9PT09PT09PSovXG4gIHZhciBhY3F1aXNpdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWNxdWlzaXRpb25cIik7XG4gIGlmIChhY3F1aXNpdGlvbiAhPT0gbnVsbCkge1xuICAgIHZhciBhY3FEYXRhID0gW1xuICAgICAge1xuICAgICAgICBmaXJzdDogWzEwMCwgMTgwLCA0NCwgNzUsIDE1MCwgNjYsIDcwXSxcbiAgICAgICAgc2Vjb25kOiBbMTQ0LCA0NCwgMTc3LCA3NiwgMjMsIDE4OSwgMTJdLFxuICAgICAgICB0aGlyZDogWzQ0LCAxNjcsIDEwMiwgMTIzLCAxODMsIDg4LCAxMzRdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBmaXJzdDogWzE0NCwgNDQsIDExMCwgNSwgMTIzLCA4OSwgMTJdLFxuICAgICAgICBzZWNvbmQ6IFsyMiwgMTIzLCA0NSwgMTMwLCAxMTIsIDU0LCAxODFdLFxuICAgICAgICB0aGlyZDogWzU1LCA0NCwgMTQ0LCA3NSwgMTU1LCAxNjYsIDcwXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgZmlyc3Q6IFsxMzQsIDgwLCAxMjMsIDY1LCAxNzEsIDMzLCAyMl0sXG4gICAgICAgIHNlY29uZDogWzQ0LCAxNDQsIDc3LCA3NiwgMTIzLCA4OSwgMTEyXSxcbiAgICAgICAgdGhpcmQ6IFsxNTYsIDIzLCAxNjUsIDg4LCAxMTIsIDU0LCAxODFdXG4gICAgICB9XG4gICAgXTtcblxuICAgIHZhciBjb25maWdBY3EgPSB7XG4gICAgICAvLyBUaGUgdHlwZSBvZiBjaGFydCB3ZSB3YW50IHRvIGNyZWF0ZVxuICAgICAgdHlwZTogXCJsaW5lXCIsXG5cbiAgICAgIC8vIFRoZSBkYXRhIGZvciBvdXIgZGF0YXNldFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcbiAgICAgICAgICBcIjQgSmFuXCIsXG4gICAgICAgICAgXCI1IEphblwiLFxuICAgICAgICAgIFwiNiBKYW5cIixcbiAgICAgICAgICBcIjcgSmFuXCIsXG4gICAgICAgICAgXCI4IEphblwiLFxuICAgICAgICAgIFwiOSBKYW5cIixcbiAgICAgICAgICBcIjEwIEphblwiXG4gICAgICAgIF0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiUmVmZXJyYWxcIixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2IoNzYsIDEzMiwgMjU1KVwiLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSg3NiwgMTMyLCAyNTUsMClcIixcbiAgICAgICAgICAgIGRhdGE6IGFjcURhdGFbMF0uZmlyc3QsXG4gICAgICAgICAgICBsaW5lVGVuc2lvbjogMC4zLFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg3NiwgMTMyLCAyNTUsMClcIixcbiAgICAgICAgICAgIHBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg3NiwgMTMyLCAyNTUsMSlcIixcbiAgICAgICAgICAgIHBvaW50SG92ZXJSYWRpdXM6IDMsXG4gICAgICAgICAgICBwb2ludEhpdFJhZGl1czogMzAsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgcG9pbnRTdHlsZTogXCJyZWN0Um91bmRlZFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJEaXJlY3RcIixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2IoMjU0LCAxOTYsIDApXCIsXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDI1NCwgMTk2LCAwLDApXCIsXG4gICAgICAgICAgICBkYXRhOiBhY3FEYXRhWzBdLnNlY29uZCxcbiAgICAgICAgICAgIGxpbmVUZW5zaW9uOiAwLjMsXG4gICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NCwgMTk2LCAwLDApXCIsXG4gICAgICAgICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU0LCAxOTYsIDAsMSlcIixcbiAgICAgICAgICAgIHBvaW50SG92ZXJSYWRpdXM6IDMsXG4gICAgICAgICAgICBwb2ludEhpdFJhZGl1czogMzAsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgcG9pbnRTdHlsZTogXCJyZWN0Um91bmRlZFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJTb2NpYWxcIixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2IoNDEsIDIwNCwgMTUxKVwiLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSg0MSwgMjA0LCAxNTEsMClcIixcbiAgICAgICAgICAgIGRhdGE6IGFjcURhdGFbMF0udGhpcmQsXG4gICAgICAgICAgICBsaW5lVGVuc2lvbjogMC4zLFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg0MSwgMjA0LCAxNTEsMClcIixcbiAgICAgICAgICAgIHBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg0MSwgMjA0LCAxNTEsMSlcIixcbiAgICAgICAgICAgIHBvaW50SG92ZXJSYWRpdXM6IDMsXG4gICAgICAgICAgICBwb2ludEhpdFJhZGl1czogMzAsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgcG9pbnRTdHlsZTogXCJyZWN0Um91bmRlZFwiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuXG4gICAgICAvLyBDb25maWd1cmF0aW9uIG9wdGlvbnMgZ28gaGVyZVxuICAgICAgb3B0aW9uczoge1xuICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjZWVlXCIsXG4gICAgICAgICAgICAgICAgemVyb0xpbmVDb2xvcjogXCIjZWVlXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzdGVwU2l6ZTogNTAsXG4gICAgICAgICAgICAgICAgbWF4OiAyMDBcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgICBtb2RlOiBcImluZGV4XCIsXG4gICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwiIzg4OFwiLFxuICAgICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICAgIHRpdGxlRm9udFNpemU6IDEyLFxuICAgICAgICAgIGJvZHlGb250U2l6ZTogMTUsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgICBkaXNwbGF5Q29sb3JzOiB0cnVlLFxuICAgICAgICAgIHhQYWRkaW5nOiAyMCxcbiAgICAgICAgICB5UGFkZGluZzogMTAsXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiYSgyMjAsIDIyMCwgMjIwLCAwLjkpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgY2FyZXRTaXplOiAxMCxcbiAgICAgICAgICBjYXJldFBhZGRpbmc6IDE1XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGN0eCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWNxdWlzaXRpb25cIikuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgIHZhciBsaW5lQWNxID0gbmV3IENoYXJ0KGN0eCwgY29uZmlnQWNxKTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFjcUxlZ2VuZFwiKS5pbm5lckhUTUwgPSBsaW5lQWNxLmdlbmVyYXRlTGVnZW5kKCk7XG5cbiAgICB2YXIgaXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgXCIjdXNlci1hY3F1aXNpdGlvbiAubmF2LXRhYnMgLm5hdi1pdGVtXCJcbiAgICApO1xuICAgIGl0ZW1zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbmZpZ0FjcS5kYXRhLmRhdGFzZXRzWzBdLmRhdGEgPSBhY3FEYXRhW2luZGV4XS5maXJzdDtcbiAgICAgICAgY29uZmlnQWNxLmRhdGEuZGF0YXNldHNbMV0uZGF0YSA9IGFjcURhdGFbaW5kZXhdLnNlY29uZDtcbiAgICAgICAgY29uZmlnQWNxLmRhdGEuZGF0YXNldHNbMl0uZGF0YSA9IGFjcURhdGFbaW5kZXhdLnRoaXJkO1xuICAgICAgICBsaW5lQWNxLnVwZGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvKj09PT09PT09IDE2LiBBTkFMWVRJQ1MgLSBBQ1RJVklUWSBDSEFSVCA9PT09PT09PSovXG4gIHZhciBhY3Rpdml0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWN0aXZpdHlcIik7XG4gIGlmIChhY3Rpdml0eSAhPT0gbnVsbCkge1xuICAgIHZhciBhY3Rpdml0eURhdGEgPSBbXG4gICAgICB7XG4gICAgICAgIGZpcnN0OiBbMCwgNjUsIDUyLCAxMTUsIDk4LCAxNjUsIDEyNV0sXG4gICAgICAgIHNlY29uZDogWzQ1LCAzOCwgMTAwLCA4NywgMTUyLCAxODcsIDg1XVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgZmlyc3Q6IFswLCA2NSwgNzcsIDMzLCA0OSwgMTAwLCAxMDBdLFxuICAgICAgICBzZWNvbmQ6IFs4OCwgMzMsIDIwLCA0NCwgMTExLCAxNDAsIDc3XVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgZmlyc3Q6IFswLCA0MCwgNzcsIDU1LCAzMywgMTE2LCA1MF0sXG4gICAgICAgIHNlY29uZDogWzU1LCAzMiwgMjAsIDU1LCAxMTEsIDEzNCwgNjZdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBmaXJzdDogWzAsIDQ0LCAyMiwgNzcsIDMzLCAxNTEsIDk5XSxcbiAgICAgICAgc2Vjb25kOiBbNjAsIDMyLCAxMjAsIDU1LCAxOSwgMTM0LCA4OF1cbiAgICAgIH1cbiAgICBdO1xuXG4gICAgdmFyIGNvbmZpZyA9IHtcbiAgICAgIC8vIFRoZSB0eXBlIG9mIGNoYXJ0IHdlIHdhbnQgdG8gY3JlYXRlXG4gICAgICB0eXBlOiBcImxpbmVcIixcbiAgICAgIC8vIFRoZSBkYXRhIGZvciBvdXIgZGF0YXNldFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcbiAgICAgICAgICBcIjQgSmFuXCIsXG4gICAgICAgICAgXCI1IEphblwiLFxuICAgICAgICAgIFwiNiBKYW5cIixcbiAgICAgICAgICBcIjcgSmFuXCIsXG4gICAgICAgICAgXCI4IEphblwiLFxuICAgICAgICAgIFwiOSBKYW5cIixcbiAgICAgICAgICBcIjEwIEphblwiXG4gICAgICAgIF0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiQWN0aXZlXCIsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYig4MiwgMTM2LCAyNTUpXCIsXG4gICAgICAgICAgICBkYXRhOiBhY3Rpdml0eURhdGFbMF0uZmlyc3QsXG4gICAgICAgICAgICBsaW5lVGVuc2lvbjogMCxcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiA1LFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgICAgcG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NSwyNTUsMjU1LDEpXCIsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgcG9pbnRIb3ZlclJhZGl1czogNyxcbiAgICAgICAgICAgIHBvaW50SG92ZXJCb3JkZXJXaWR0aDogMVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiSW5hY3RpdmVcIixcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFwicmdiKDI1NSwgMTk5LCAxNSlcIixcbiAgICAgICAgICAgIGRhdGE6IGFjdGl2aXR5RGF0YVswXS5zZWNvbmQsXG4gICAgICAgICAgICBsaW5lVGVuc2lvbjogMCxcbiAgICAgICAgICAgIGJvcmRlckRhc2g6IFsxMCwgNV0sXG4gICAgICAgICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgICAgICAgIHBvaW50UmFkaXVzOiA1LFxuICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgICAgcG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDI1NSwyNTUsMjU1LDEpXCIsXG4gICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgICAgcG9pbnRIb3ZlclJhZGl1czogNyxcbiAgICAgICAgICAgIHBvaW50SG92ZXJCb3JkZXJXaWR0aDogMVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIC8vIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBnbyBoZXJlXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICB4QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzhhOTA5ZFwiLCAvLyB0aGlzIGhlcmVcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgIGZvbnRDb2xvcjogXCIjOGE5MDlkXCIsXG4gICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJSb2JvdG8sIHNhbnMtc2VyaWZcIixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiNlZWVcIixcbiAgICAgICAgICAgICAgICB6ZXJvTGluZUNvbG9yOiBcIiNlZWVcIlxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIC8vIGNhbGxiYWNrOiBmdW5jdGlvbih0aWNrLCBpbmRleCwgYXJyYXkpIHtcbiAgICAgICAgICAgICAgICAvLyAgIHJldHVybiAoaW5kZXggJSAyKSA/IFwiXCIgOiB0aWNrO1xuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBzdGVwU2l6ZTogNTAsXG4gICAgICAgICAgICAgICAgZm9udENvbG9yOiBcIiM4YTkwOWRcIixcbiAgICAgICAgICAgICAgICBmb250RmFtaWx5OiBcIlJvYm90bywgc2Fucy1zZXJpZlwiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgICAgbW9kZTogXCJpbmRleFwiLFxuICAgICAgICAgIGludGVyc2VjdDogZmFsc2UsXG4gICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwiIzg4OFwiLFxuICAgICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICAgIHRpdGxlRm9udFNpemU6IDEyLFxuICAgICAgICAgIGJvZHlGb250U2l6ZTogMTUsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgICBkaXNwbGF5Q29sb3JzOiB0cnVlLFxuICAgICAgICAgIHhQYWRkaW5nOiAxMCxcbiAgICAgICAgICB5UGFkZGluZzogNyxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDIyMCwgMjIwLCAyMjAsIDAuOSlcIixcbiAgICAgICAgICBib3JkZXJXaWR0aDogMixcbiAgICAgICAgICBjYXJldFNpemU6IDYsXG4gICAgICAgICAgY2FyZXRQYWRkaW5nOiA1XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGN0eCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWN0aXZpdHlcIikuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgIHZhciBteUxpbmUgPSBuZXcgQ2hhcnQoY3R4LCBjb25maWcpO1xuXG4gICAgdmFyIGl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiN1c2VyLWFjdGl2aXR5IC5uYXYtdGFicyAubmF2LWl0ZW1cIik7XG4gICAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uZmlnLmRhdGEuZGF0YXNldHNbMF0uZGF0YSA9IGFjdGl2aXR5RGF0YVtpbmRleF0uZmlyc3Q7XG4gICAgICAgIGNvbmZpZy5kYXRhLmRhdGFzZXRzWzFdLmRhdGEgPSBhY3Rpdml0eURhdGFbaW5kZXhdLnNlY29uZDtcbiAgICAgICAgbXlMaW5lLnVwZGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvKj09PT09PT09IDE3LiBIT1JJWk9OVEFMIEJBUiBDSEFSVDEgPT09PT09PT0qL1xuICB2YXIgaGJhcjEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhiYXIxXCIpO1xuICBpZiAoaGJhcjEgIT09IG51bGwpIHtcbiAgICB2YXIgaGJDaGFydDEgPSBuZXcgQ2hhcnQoaGJhcjEsIHtcbiAgICAgIHR5cGU6IFwiaG9yaXpvbnRhbEJhclwiLFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcIkluZGlhXCIsIFwiVVNBXCIsIFwiVHVya2V5XCJdLFxuICAgICAgICBkYXRhc2V0czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcInNpZ251cFwiLFxuICAgICAgICAgICAgZGF0YTogWzE4LCAxMywgOS41XSxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjNGM4NGZmXCJcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICB4QXhlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBcIiNlZWVcIixcbiAgICAgICAgICAgICAgICB6ZXJvTGluZUNvbG9yOiBcIiNlZWVcIixcbiAgICAgICAgICAgICAgICB0aWNrTWFya0xlbmd0aDogM1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsIC8vIGZhbHNlIHdpbGwgaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsXG4gICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJSb2JvdG8sIHNhbnMtc2VyaWZcIixcbiAgICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzhhOTA5ZFwiLFxuICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSArIFwiICVcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLCAvLyBoaWRlIG1haW4geS1heGlzIGxpbmVcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsXG4gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IGZhbHNlLFxuICAgICAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiUm9ib3RvLCBzYW5zLXNlcmlmXCIsXG4gICAgICAgICAgICAgICAgZm9udENvbG9yOiBcIiM4YTkwOWRcIixcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTRcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS42LFxuICAgICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgICBtb2RlOiBcImluZGV4XCIsXG4gICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwiIzg4OFwiLFxuICAgICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICAgIHRpdGxlRm9udFNpemU6IDEyLFxuICAgICAgICAgIGJvZHlGb250U2l6ZTogMTUsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgICBkaXNwbGF5Q29sb3JzOiB0cnVlLFxuICAgICAgICAgIHhQYWRkaW5nOiAxMCxcbiAgICAgICAgICB5UGFkZGluZzogNyxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDIyMCwgMjIwLCAyMjAsIDAuOSlcIixcbiAgICAgICAgICBib3JkZXJXaWR0aDogMixcbiAgICAgICAgICBjYXJldFNpemU6IDYsXG4gICAgICAgICAgY2FyZXRQYWRkaW5nOiA1XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICAvKj09PT09PT09IDE4LiBIT1JJWk9OVEFMIEJBUiBDSEFSVDIgPT09PT09PT0qL1xuICB2YXIgaGJhcjIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhiYXIyXCIpO1xuICBpZiAoaGJhcjIgIT09IG51bGwpIHtcbiAgICB2YXIgaGJDaGFydDIgPSBuZXcgQ2hhcnQoaGJhcjIsIHtcbiAgICAgIHR5cGU6IFwiaG9yaXpvbnRhbEJhclwiLFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcIkZsb3JpZGFcIiwgXCJQb2xhbmRcIiwgXCJVS1wiXSxcbiAgICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJzaWdudXBcIixcbiAgICAgICAgICAgIGRhdGE6IFs3LjUsIDQuNiwgNF0sXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiIzRjODRmZlwiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb2xvcjogXCIjZWVlXCIsXG4gICAgICAgICAgICAgICAgemVyb0xpbmVDb2xvcjogXCIjZWVlXCIsXG4gICAgICAgICAgICAgICAgdGlja01hcmtMZW5ndGg6IDNcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLCAvLyBmYWxzZSB3aWxsIGhpZGUgbWFpbiB4LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlLFxuICAgICAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiUm9ib3RvLCBzYW5zLXNlcmlmXCIsXG4gICAgICAgICAgICAgICAgZm9udENvbG9yOiBcIiM4YTkwOWRcIixcbiAgICAgICAgICAgICAgICBtYXg6IDIwLFxuICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSArIFwiJVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogZmFsc2UsXG4gICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJSb2JvdG8sIHNhbnMtc2VyaWZcIixcbiAgICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzhhOTA5ZFwiLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiAxNFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBiYXJQZXJjZW50YWdlOiAxLjYsXG4gICAgICAgICAgICAgIGNhdGVnb3J5UGVyY2VudGFnZTogMC4yXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICB0b29sdGlwczoge1xuICAgICAgICAgIG1vZGU6IFwiaW5kZXhcIixcbiAgICAgICAgICB0aXRsZUZvbnRDb2xvcjogXCIjODg4XCIsXG4gICAgICAgICAgYm9keUZvbnRDb2xvcjogXCIjNTU1XCIsXG4gICAgICAgICAgdGl0bGVGb250U2l6ZTogMTIsXG4gICAgICAgICAgYm9keUZvbnRTaXplOiAxNSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTYsMjU2LDI1NiwwLjk1KVwiLFxuICAgICAgICAgIGRpc3BsYXlDb2xvcnM6IHRydWUsXG4gICAgICAgICAgeFBhZGRpbmc6IDEwLFxuICAgICAgICAgIHlQYWRkaW5nOiA3LFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMjIwLCAyMjAsIDIyMCwgMC45KVwiLFxuICAgICAgICAgIGJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgIGNhcmV0U2l6ZTogNixcbiAgICAgICAgICBjYXJldFBhZGRpbmc6IDVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyo9PT09PT09PSAxOS4gREVWSUNFIC0gRE9VR0hOVVQgQ0hBUlQgPT09PT09PT0qL1xuICB2YXIgZGV2aWNlQ2hhcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRldmljZUNoYXJ0XCIpO1xuICBpZiAoZGV2aWNlQ2hhcnQgIT09IG51bGwpIHtcbiAgICB2YXIgbXlkZXZpY2VDaGFydCA9IG5ldyBDaGFydChkZXZpY2VDaGFydCwge1xuICAgICAgdHlwZTogXCJkb3VnaG51dFwiLFxuICAgICAgZGF0YToge1xuICAgICAgICBsYWJlbHM6IFtcIkRlc2t0b3BcIiwgXCJUYWJsZXRcIiwgXCJNb2JpbGVcIl0sXG4gICAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFtcIkRlc2t0b3BcIiwgXCJUYWJsZXRcIiwgXCJNb2JpbGVcIl0sXG4gICAgICAgICAgICBkYXRhOiBbNjAwMDAsIDE1MDAwLCAyNTAwMF0sXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFtcbiAgICAgICAgICAgICAgXCJyZ2JhKDc2LCAxMzIsIDI1NSwgMSlcIixcbiAgICAgICAgICAgICAgXCJyZ2JhKDc2LCAxMzIsIDI1NSwgMC44NSlcIixcbiAgICAgICAgICAgICAgXCJyZ2JhKDc2LCAxMzIsIDI1NSwgMC43MClcIixcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBib3JkZXJXaWR0aDogMVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIGN1dG91dFBlcmNlbnRhZ2U6IDc1LFxuICAgICAgICB0b29sdGlwczoge1xuICAgICAgICAgIGNhbGxiYWNrczoge1xuICAgICAgICAgICAgdGl0bGU6IGZ1bmN0aW9uICh0b29sdGlwSXRlbSwgZGF0YSkge1xuICAgICAgICAgICAgICByZXR1cm4gZGF0YVtcImxhYmVsc1wiXVt0b29sdGlwSXRlbVswXVtcImluZGV4XCJdXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsYWJlbDogZnVuY3Rpb24gKHRvb2x0aXBJdGVtLCBkYXRhKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgZGF0YVtcImRhdGFzZXRzXCJdWzBdW1wiZGF0YVwiXVt0b29sdGlwSXRlbVtcImluZGV4XCJdXSArIFwiIFNlc3Npb25zXCJcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuXG4gICAgICAgICAgdGl0bGVGb250Q29sb3I6IFwiIzg4OFwiLFxuICAgICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICAgIHRpdGxlRm9udFNpemU6IDEyLFxuICAgICAgICAgIGJvZHlGb250U2l6ZTogMTUsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgICBkaXNwbGF5Q29sb3JzOiB0cnVlLFxuICAgICAgICAgIHhQYWRkaW5nOiAxMCxcbiAgICAgICAgICB5UGFkZGluZzogNyxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDIyMCwgMjIwLCAyMjAsIDAuOSlcIixcbiAgICAgICAgICBib3JkZXJXaWR0aDogMixcbiAgICAgICAgICBjYXJldFNpemU6IDYsXG4gICAgICAgICAgY2FyZXRQYWRkaW5nOiA1XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufSk7XG4vKj09PT09PT09IDIwLiBCQVIgQ0hBUlQgPT09PT09PT0qL1xudmFyIGJhclggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJhckNoYXJ0XCIpO1xuaWYgKGJhclggIT09IG51bGwpIHtcbiAgdmFyIG15Q2hhcnQgPSBuZXcgQ2hhcnQoYmFyWCwge1xuICAgIHR5cGU6IFwiYmFyXCIsXG4gICAgZGF0YToge1xuICAgICAgbGFiZWxzOiBbXG4gICAgICAgIFwiSmFuXCIsXG4gICAgICAgIFwiRmViXCIsXG4gICAgICAgIFwiTWFyXCIsXG4gICAgICAgIFwiQXByXCIsXG4gICAgICAgIFwiTWF5XCIsXG4gICAgICAgIFwiSnVuXCIsXG4gICAgICAgIFwiSnVsXCIsXG4gICAgICAgIFwiQXVnXCIsXG4gICAgICAgIFwiU2VwXCIsXG4gICAgICAgIFwiT2N0XCIsXG4gICAgICAgIFwiTm92XCIsXG4gICAgICAgIFwiRGVjXCJcbiAgICAgIF0sXG4gICAgICBkYXRhc2V0czogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6IFwic2lnbnVwXCIsXG4gICAgICAgICAgZGF0YTogWzUsIDYsIDQuNSwgNS41LCAzLCA2LCA0LjUsIDYsIDgsIDMsIDUuNSwgNF0sXG4gICAgICAgICAgLy8gZGF0YTogWzIsIDMuMiwgMS44LCAyLjEsIDEuNSwgMy41LCA0LCAyLjMsIDIuOSwgNC41LCAxLjgsIDMuNCwgMi44XSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiIzRjODRmZlwiXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgIGxlZ2VuZDoge1xuICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgfSxcbiAgICAgIHNjYWxlczoge1xuICAgICAgICB4QXhlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSxcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS44LFxuICAgICAgICAgICAgY2F0ZWdvcnlQZXJjZW50YWdlOiAwLjJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLCAvLyBoaWRlIG1haW4geS1heGlzIGxpbmVcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB0b29sdGlwczoge1xuICAgICAgICB0aXRsZUZvbnRDb2xvcjogXCIjODg4XCIsXG4gICAgICAgIGJvZHlGb250Q29sb3I6IFwiIzU1NVwiLFxuICAgICAgICB0aXRsZUZvbnRTaXplOiAxMixcbiAgICAgICAgYm9keUZvbnRTaXplOiAxNSxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU2LDI1NiwyNTYsMC45NSlcIixcbiAgICAgICAgZGlzcGxheUNvbG9yczogZmFsc2UsXG4gICAgICAgIGJvcmRlckNvbG9yOiBcInJnYmEoMjIwLCAyMjAsIDIyMCwgMC45KVwiLFxuICAgICAgICBib3JkZXJXaWR0aDogMlxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG4vKj09PT09PT09IDIxLiBCQVIgQ0hBUlQxID09PT09PT09Ki9cbnZhciBiYXIxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXJDaGFydDFcIik7XG5pZiAoYmFyMSAhPT0gbnVsbCkge1xuICB2YXIgbXlDaGFydCA9IG5ldyBDaGFydChiYXIxLCB7XG4gICAgdHlwZTogXCJiYXJcIixcbiAgICBkYXRhOiB7XG4gICAgICBsYWJlbHM6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiXSxcbiAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBsYWJlbDogXCJzaWdudXBcIixcbiAgICAgICAgICBkYXRhOiBbNSwgNy41LCA1LjUsIDYuNSwgNCwgOV0sXG4gICAgICAgICAgLy8gZGF0YTogWzIsIDMuMiwgMS44LCAyLjEsIDEuNSwgMy41LCA0LCAyLjMsIDIuOSwgNC41LCAxLjgsIDMuNCwgMi44XSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiIzRjODRmZlwiXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICAgIGxlZ2VuZDoge1xuICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgfSxcbiAgICAgIHNjYWxlczoge1xuICAgICAgICB4QXhlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSxcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYmFyUGVyY2VudGFnZTogMS44LFxuICAgICAgICAgICAgY2F0ZWdvcnlQZXJjZW50YWdlOiAwLjJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLCAvLyBoaWRlIG1haW4geS1heGlzIGxpbmVcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcbiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB0b29sdGlwczoge1xuICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG4vKj09PT09PT09IDIyLiBCQVIgQ0hBUlQyID09PT09PT09Ki9cbnZhciBiYXIyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYXJDaGFydDJcIik7XG5pZiAoYmFyMiAhPT0gbnVsbCkge1xuICB2YXIgbXlDaGFydDIgPSBuZXcgQ2hhcnQoYmFyMiwge1xuICAgIHR5cGU6IFwiYmFyXCIsXG4gICAgZGF0YToge1xuICAgICAgbGFiZWxzOiBbXCJKYW5cIiwgXCJGZWJcIiwgXCJNYXJcIiwgXCJBcHJcIiwgXCJNYXlcIiwgXCJKdW5cIl0sXG4gICAgICBkYXRhc2V0czogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6IFwic2lnbnVwXCIsXG4gICAgICAgICAgZGF0YTogWzUsIDcuNSwgNS41LCA2LjUsIDQsIDldLFxuICAgICAgICAgIC8vIGRhdGE6IFsyLCAzLjIsIDEuOCwgMi4xLCAxLjUsIDMuNSwgNCwgMi4zLCAyLjksIDQuNSwgMS44LCAzLjQsIDIuOF0sXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcIiNmZmZmZmZcIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBvcHRpb25zOiB7XG4gICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICBsZWdlbmQ6IHtcbiAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgIH0sXG4gICAgICBzY2FsZXM6IHtcbiAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsIC8vIGhpZGUgbWFpbiB4LWF4aXMgbGluZVxuICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDEuOCxcbiAgICAgICAgICAgIGNhdGVnb3J5UGVyY2VudGFnZTogMC4yXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICB5QXhlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSwgLy8gaGlkZSBtYWluIHktYXhpcyBsaW5lXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuLyo9PT09PT09PSAyMy4gQkFSIENIQVJUMyA9PT09PT09PSovXG52YXIgYmFyMyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYmFyQ2hhcnQzXCIpO1xuaWYgKGJhcjMgIT09IG51bGwpIHtcbiAgdmFyIGJhcl9DaGFydCA9IG5ldyBDaGFydChiYXIzLCB7XG4gICAgdHlwZTogXCJiYXJcIixcbiAgICBkYXRhOiB7XG4gICAgICBsYWJlbHM6IFtcbiAgICAgICAgXCJKYW5cIixcbiAgICAgICAgXCJGZWJcIixcbiAgICAgICAgXCJNYXJcIixcbiAgICAgICAgXCJBcHJcIixcbiAgICAgICAgXCJNYXlcIixcbiAgICAgICAgXCJKdW5cIixcbiAgICAgICAgXCJKdWxcIixcbiAgICAgICAgXCJBdWdcIixcbiAgICAgICAgXCJTZXBcIixcbiAgICAgICAgXCJPY3RcIixcbiAgICAgICAgXCJOb3ZcIixcbiAgICAgICAgXCJEZWNcIlxuICAgICAgXSxcbiAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBsYWJlbDogXCJzaWdudXBcIixcbiAgICAgICAgICBkYXRhOiBbNSwgNiwgNC41LCA1LjUsIDMsIDYsIDQuNSwgNiwgOCwgMywgNS41LCA0XSxcbiAgICAgICAgICAvLyBkYXRhOiBbMiwgMy4yLCAxLjgsIDIuMSwgMS41LCAzLjUsIDQsIDIuMywgMi45LCA0LjUsIDEuOCwgMy40LCAyLjhdLFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjZmZmZmZmXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAgb3B0aW9uczoge1xuICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgbGVnZW5kOiB7XG4gICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICB9LFxuICAgICAgc2NhbGVzOiB7XG4gICAgICAgIHhBeGVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLCAvLyBoaWRlIG1haW4geC1heGlzIGxpbmVcbiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBiYXJQZXJjZW50YWdlOiAxLjgsXG4gICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWVcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG4vKj09PT09PT09IDI0LiBHUkFESUVOVCBMSU5FIENIQVJUMSA9PT09PT09PSovXG52YXIgZ2xpbmUxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnbGluZTFcIik7XG5pZiAoZ2xpbmUxICE9PSBudWxsKSB7XG4gIGdsaW5lMSA9IGdsaW5lMS5nZXRDb250ZXh0KFwiMmRcIik7XG4gIHZhciBncmFkaWVudEZpbGwgPSBnbGluZTEuY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgMTIwLCAwLCAwKTtcbiAgZ3JhZGllbnRGaWxsLmFkZENvbG9yU3RvcCgwLCBcInJnYmEoNDEsMjA0LDE1MSwwLjEwMTk2KVwiKTtcbiAgZ3JhZGllbnRGaWxsLmFkZENvbG9yU3RvcCgxLCBcInJnYmEoNDEsMjA0LDE1MSwwLjMwMTk2KVwiKTtcblxuICB2YXIgbENoYXJ0ID0gbmV3IENoYXJ0KGdsaW5lMSwge1xuICAgIHR5cGU6IFwibGluZVwiLFxuICAgIGRhdGE6IHtcbiAgICAgIGxhYmVsczogW1wiRnJpXCIsIFwiU2F0XCIsIFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCJdLFxuICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiBcIlJldlwiLFxuICAgICAgICAgIGxpbmVUZW5zaW9uOiAwLFxuICAgICAgICAgIHBvaW50UmFkaXVzOiAwLjEsXG4gICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RmlsbCxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCIjMjljYzk3XCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgZGF0YTogWzAsIDUuNSwgNCwgOSwgNCwgNywgNC43XVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBvcHRpb25zOiB7XG4gICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICBsZWdlbmQ6IHtcbiAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgIH0sXG4gICAgICBzY2FsZXM6IHtcbiAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsIC8vIGhpZGUgbWFpbiB4LWF4aXMgbGluZVxuICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDEuOCxcbiAgICAgICAgICAgIGNhdGVnb3J5UGVyY2VudGFnZTogMC4yXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICB5QXhlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSwgLy8gaGlkZSBtYWluIHktYXhpcyBsaW5lXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuLyo9PT09PT09PSAyNS4gR1JBRElFTlQgTElORSBDSEFSVDIgPT09PT09PT0qL1xudmFyIGdsaW5lMiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2xpbmUyXCIpO1xuaWYgKGdsaW5lMiAhPT0gbnVsbCkge1xuICBnbGluZTIgPSBnbGluZTIuZ2V0Q29udGV4dChcIjJkXCIpO1xuICB2YXIgZ3JhZGllbnRGaWxsID0gZ2xpbmUyLmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDkwLCAwLCAwKTtcbiAgZ3JhZGllbnRGaWxsLmFkZENvbG9yU3RvcCgwLCBcInJnYmEoMjU1LDI1NSwyNTUsMC4xMDE5NilcIik7XG4gIGdyYWRpZW50RmlsbC5hZGRDb2xvclN0b3AoMSwgXCJyZ2JhKDI1NSwyNTUsMjU1LDAuMzAxOTYpXCIpO1xuXG4gIHZhciBsQ2hhcnQyID0gbmV3IENoYXJ0KGdsaW5lMiwge1xuICAgIHR5cGU6IFwibGluZVwiLFxuICAgIGRhdGE6IHtcbiAgICAgIGxhYmVsczogW1wiRnJpXCIsIFwiU2F0XCIsIFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCJdLFxuICAgICAgZGF0YXNldHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiBcIlJldlwiLFxuICAgICAgICAgIGxpbmVUZW5zaW9uOiAwLFxuICAgICAgICAgIHBvaW50UmFkaXVzOiAwLjEsXG4gICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RmlsbCxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgZGF0YTogWzAsIDUuNSwgNCwgOSwgNCwgNywgNC43XVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBvcHRpb25zOiB7XG4gICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICBsZWdlbmQ6IHtcbiAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgIH0sXG4gICAgICBzY2FsZXM6IHtcbiAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsIC8vIGhpZGUgbWFpbiB4LWF4aXMgbGluZVxuICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDEuOCxcbiAgICAgICAgICAgIGNhdGVnb3J5UGVyY2VudGFnZTogMC4yXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICB5QXhlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiBmYWxzZSwgLy8gaGlkZSBtYWluIHktYXhpcyBsaW5lXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UsXG4gICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuLyo9PT09PT09PSAyNi4gR1JBRElFTlQgTElORSBDSEFSVDMgPT09PT09PT0qL1xudmFyIGdsaW5lMyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGluZTNcIik7XG5pZiAoZ2xpbmUzICE9PSBudWxsKSB7XG4gIGdsaW5lMyA9IGdsaW5lMy5nZXRDb250ZXh0KFwiMmRcIik7XG4gIHZhciBncmFkaWVudEZpbGwgPSBnbGluZTMuY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgOTAsIDAsIDApO1xuICBncmFkaWVudEZpbGwuYWRkQ29sb3JTdG9wKDAsIFwicmdiYSgyNTUsMjU1LDI1NSwwLjEwMTk2KVwiKTtcbiAgZ3JhZGllbnRGaWxsLmFkZENvbG9yU3RvcCgxLCBcInJnYmEoMjU1LDI1NSwyNTUsMC4zMDE5NilcIik7XG5cbiAgdmFyIGxDaGFydDMgPSBuZXcgQ2hhcnQoZ2xpbmUzLCB7XG4gICAgdHlwZTogXCJsaW5lXCIsXG4gICAgZGF0YToge1xuICAgICAgbGFiZWxzOiBbXCJGcmlcIiwgXCJTYXRcIiwgXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIl0sXG4gICAgICBkYXRhc2V0czogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6IFwiUmV2XCIsXG4gICAgICAgICAgbGluZVRlbnNpb246IDAsXG4gICAgICAgICAgcG9pbnRSYWRpdXM6IDQsXG4gICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwiIzI5Y2M5N1wiLFxuICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdyYWRpZW50RmlsbCxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCIjZmZmZmZmXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgZGF0YTogWzAsIDQsIDMsIDUuNSwgMywgNC43LCAxXVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICBvcHRpb25zOiB7XG4gICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICBsYXlvdXQ6IHtcbiAgICAgICAgcGFkZGluZzoge1xuICAgICAgICAgIHJpZ2h0OiAxMFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgbGVnZW5kOiB7XG4gICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICB9LFxuICAgICAgc2NhbGVzOiB7XG4gICAgICAgIHhBeGVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLCAvLyBoaWRlIG1haW4geC1heGlzIGxpbmVcbiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBiYXJQZXJjZW50YWdlOiAxLjgsXG4gICAgICAgICAgICBjYXRlZ29yeVBlcmNlbnRhZ2U6IDAuMlxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgeUF4ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsIC8vIGhpZGUgbWFpbiB5LWF4aXMgbGluZVxuICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIHRvb2x0aXBzOiB7XG4gICAgICAgIGVuYWJsZWQ6IHRydWVcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuLyo9PT09PT09PSAyNy4gQUNRVUlTSVRJT04zID09PT09PT09Ki9cbnZhciBhY3F1aXNpdGlvbjMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJhcjNcIik7XG5pZiAoYWNxdWlzaXRpb24zICE9PSBudWxsKSB7XG4gIHZhciBhY0NoYXJ0MyA9IG5ldyBDaGFydChhY3F1aXNpdGlvbjMsIHtcbiAgICAvLyBUaGUgdHlwZSBvZiBjaGFydCB3ZSB3YW50IHRvIGNyZWF0ZVxuICAgIHR5cGU6IFwiYmFyXCIsXG5cbiAgICAvLyBUaGUgZGF0YSBmb3Igb3VyIGRhdGFzZXRcbiAgICBkYXRhOiB7XG4gICAgICBsYWJlbHM6IFtcIjQgSmFuXCIsIFwiNSBKYW5cIiwgXCI2IEphblwiLCBcIjcgSmFuXCIsIFwiOCBKYW5cIiwgXCI5IEphblwiLCBcIjEwIEphblwiXSxcbiAgICAgIGRhdGFzZXRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBsYWJlbDogXCJSZWZlcnJhbFwiLFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2IoNzYsIDEzMiwgMjU1KVwiLFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBcInJnYmEoNzYsIDEzMiwgMjU1LDApXCIsXG4gICAgICAgICAgZGF0YTogWzc4LCA5MCwgNzAsIDc1LCA0NSwgNTIsIDIyXSxcbiAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDc2LCAxMzIsIDI1NSwwKVwiLFxuICAgICAgICAgIHBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg3NiwgMTMyLCAyNTUsMSlcIixcbiAgICAgICAgICBwb2ludEhvdmVyUmFkaXVzOiAzLFxuICAgICAgICAgIHBvaW50SGl0UmFkaXVzOiAzMFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6IFwiRGlyZWN0XCIsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYigyNTQsIDE5NiwgMClcIixcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDI1NCwgMTk2LCAwLDApXCIsXG4gICAgICAgICAgZGF0YTogWzg4LCAxMTUsIDgwLCA5NiwgNjUsIDc3LCAzOF0sXG4gICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTQsIDE5NiwgMCwwKVwiLFxuICAgICAgICAgIHBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTQsIDE5NiwgMCwxKVwiLFxuICAgICAgICAgIHBvaW50SG92ZXJSYWRpdXM6IDMsXG4gICAgICAgICAgcG9pbnRIaXRSYWRpdXM6IDMwXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBsYWJlbDogXCJTb2NpYWxcIixcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiKDQxLCAyMDQsIDE1MSlcIixcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCJyZ2JhKDQxLCAyMDQsIDE1MSwwKVwiLFxuICAgICAgICAgIGRhdGE6IFsxMDMsIDEzNSwgMTAyLCAxMTYsIDgzLCA5NywgNTVdLFxuICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiBcInJnYmEoNDEsIDIwNCwgMTUxLDApXCIsXG4gICAgICAgICAgcG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDQxLCAyMDQsIDE1MSwxKVwiLFxuICAgICAgICAgIHBvaW50SG92ZXJSYWRpdXM6IDMsXG4gICAgICAgICAgcG9pbnRIaXRSYWRpdXM6IDMwXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuXG4gICAgLy8gQ29uZmlndXJhdGlvbiBvcHRpb25zIGdvIGhlcmVcbiAgICBvcHRpb25zOiB7XG4gICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXG4gICAgICBsZWdlbmQ6IHtcbiAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgIH0sXG4gICAgICBzY2FsZXM6IHtcbiAgICAgICAgeEF4ZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBncmlkTGluZXM6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHlBeGVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aWNrczoge1xuICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZSxcbiAgICAgICAgICAgICAgc3RlcFNpemU6IDUwLFxuICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzhhOTA5ZFwiLFxuICAgICAgICAgICAgICBmb250RmFtaWx5OiBcIlJvYm90bywgc2Fucy1zZXJpZlwiLFxuICAgICAgICAgICAgICBtYXg6IDIwMFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIHRvb2x0aXBzOiB7fVxuICAgIH1cbiAgfSk7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY3VzdG9tTGVnZW5kXCIpLmlubmVySFRNTCA9IGFjQ2hhcnQzLmdlbmVyYXRlTGVnZW5kKCk7XG59XG4vKj09PT09PT09IDI4LiBTVEFUSVNUSUNTID09PT09PT09Ki9cbnZhciBtc3RhdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXN0YXRcIik7XG5pZiAobXN0YXQgIT09IG51bGwpIHtcbiAgdmFyIG1zZENoYXJ0ID0gbmV3IENoYXJ0KG1zdGF0LCB7XG4gICAgdHlwZTogXCJsaW5lXCIsXG4gICAgZGF0YToge1xuICAgICAgbGFiZWxzOiBbXCJKYW5cIiwgXCJGZWJcIiwgXCJNYXJcIiwgXCJBcHJcIiwgXCJNYXlcIiwgXCJKdW5cIiwgXCJKdWxcIl0sXG4gICAgICBkYXRhc2V0czogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6IFwiT2xkXCIsXG4gICAgICAgICAgcG9pbnRSYWRpdXM6IDQsXG4gICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgyNTUsMjU1LDI1NSwxKVwiLFxuICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDIsXG4gICAgICAgICAgZmlsbDogdHJ1ZSxcbiAgICAgICAgICBsaW5lVGVuc2lvbjogMCxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSg2NiwyMDgsMTYzLDAuMilcIixcbiAgICAgICAgICBib3JkZXJXaWR0aDogMi41LFxuICAgICAgICAgIGJvcmRlckNvbG9yOiBcIiM0MmQwYTNcIixcbiAgICAgICAgICBkYXRhOiBbMTAwMDAsIDE3NTAwLCAyMDAwLCAxMTAwMCwgMTkwMDAsIDEwNTAwLCAxODAwMF1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGxhYmVsOiBcIk5ld1wiLFxuICAgICAgICAgIHBvaW50UmFkaXVzOiA0LFxuICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU1LDI1NSwyNTUsMSlcIixcbiAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAyLFxuICAgICAgICAgIGZpbGw6IHRydWUsXG4gICAgICAgICAgbGluZVRlbnNpb246IDAsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoNzYsMTMyLDI1NSwwLjIpXCIsXG4gICAgICAgICAgYm9yZGVyV2lkdGg6IDIuNSxcbiAgICAgICAgICBib3JkZXJDb2xvcjogXCIjNGM4NGZmXCIsXG4gICAgICAgICAgZGF0YTogWzIwMDAsIDExNTAwLCAxMDAwMCwgMTQwMDAsIDExMDAwLCAxNjgwMCwgMTQ1MDBdXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgbGVnZW5kOiB7XG4gICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICB9LFxuICAgICAgc2NhbGVzOiB7XG4gICAgICAgIHhBeGVzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZ3JpZExpbmVzOiB7XG4gICAgICAgICAgICAgIGRyYXdCb3JkZXI6IHRydWUsXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSwgLy8gaGlkZSBtYWluIHgtYXhpcyBsaW5lXG4gICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlLFxuICAgICAgICAgICAgICBmb250RmFtaWx5OiBcIlJvYm90bywgc2Fucy1zZXJpZlwiLFxuICAgICAgICAgICAgICBmb250Q29sb3I6IFwiIzhhOTA5ZFwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICB5QXhlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgICAgICBkcmF3Qm9yZGVyOiB0cnVlLCAvLyBoaWRlIG1haW4geS1heGlzIGxpbmVcbiAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2VzID0gW1xuICAgICAgICAgICAgICAgICAgeyBkaXZpZGVyOiAxZTYsIHN1ZmZpeDogXCJNXCIgfSxcbiAgICAgICAgICAgICAgICAgIHsgZGl2aWRlcjogMWUzLCBzdWZmaXg6IFwia1wiIH1cbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGZvcm1hdE51bWJlcihuKSB7XG4gICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJhbmdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAobiA+PSByYW5nZXNbaV0uZGl2aWRlcikge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAobiAvIHJhbmdlc1tpXS5kaXZpZGVyKS50b1N0cmluZygpICsgcmFuZ2VzW2ldLnN1ZmZpeFxuICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHJldHVybiBuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybWF0TnVtYmVyKHZhbHVlKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgc3RlcFNpemU6IDUwMDAsXG4gICAgICAgICAgICAgIGZvbnRDb2xvcjogXCIjOGE5MDlkXCIsXG4gICAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiUm9ib3RvLCBzYW5zLXNlcmlmXCIsXG4gICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgdG9vbHRpcHM6IHtcbiAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG4iXSwiZmlsZSI6Ii4vcmVzb3VyY2VzL3NsZWVrLWRhc2hib2FyZC9qcy9jaGFydHMvY2hhcnQtanMuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/charts/chart-js.js\n");

/***/ }),

/***/ "./resources/sleek-dashboard/js/charts/index.js":
/*!******************************************************!*\
  !*** ./resources/sleek-dashboard/js/charts/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart-js */ "./resources/sleek-dashboard/js/charts/chart-js.js");
/* harmony import */ var _chart_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_chart_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _chart_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== "default") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _chart_js__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);


/***/ }),

/***/ "./resources/sleek-dashboard/js/custom.js":
/*!************************************************!*\
  !*** ./resources/sleek-dashboard/js/custom.js ***!
  \************************************************/
/***/ (() => {

eval("/* ====== Index ======\n\n2. SCROLLBAR CONTENT\n3. TOOLTIPS AND POPOVER\n4. MULTIPLE SELECT\n4. LOADING BUTTON\n5. TOASTER\n6. PROGRESS BAR\n7. CIRCLE PROGRESS\n8. DATE PICKER\n\n====== End ======*/\n$(document).ready(function () {\n  \"use strict\";\n  /*======== 2. SCROLLBAR CONTENT ========*/\n\n  var dataScrollHeight = $(\"[data-scroll-height]\");\n\n  function scrollWithBigMedia(media) {\n    if (media.matches) {\n      /* The viewport is greater than, or equal to media screen size */\n      dataScrollHeight.each(function () {\n        var scrollHeight = $(this).attr(\"data-scroll-height\");\n        $(this).css({\n          height: scrollHeight + \"px\",\n          overflow: \"hidden\"\n        });\n      }); //For content that needs scroll\n\n      $(\".slim-scroll\").slimScroll({\n        opacity: 0,\n        height: \"100%\",\n        color: \"#999\",\n        size: \"5px\",\n        touchScrollStep: 50\n      }).mouseover(function () {\n        $(this).next(\".slimScrollBar\").css(\"opacity\", 0.4);\n      });\n    } else {\n      /* The viewport is less than media screen size */\n      dataScrollHeight.css({\n        height: \"auto\",\n        overflow: \"auto\"\n      });\n    }\n  }\n\n  if (dataScrollHeight.length != 0) {\n    var media = window.matchMedia(\"(min-width: 992px)\");\n    scrollWithBigMedia(media); // Call listener function at run time\n\n    media.addListener(scrollWithBigMedia); // Attach listener function on state changes\n  }\n\n  var chatLeftContent = $('#chat-left-content');\n\n  if (chatLeftContent.length != 0) {\n    chatLeftContent.slimScroll({});\n  }\n\n  var chatRightContent = $('#chat-right-content');\n\n  if (chatRightContent.length != 0) {\n    chatRightContent.slimScroll({});\n  }\n  /*======== 3. TOOLTIPS AND POPOVER ========*/\n\n\n  var tooltip = $('[data-toggle=\"tooltip\"]');\n\n  if (tooltip.length != 0) {\n    tooltip.tooltip({\n      container: \"body\",\n      template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n    });\n  }\n\n  var popover = $('[data-toggle=\"popover\"]');\n\n  if (popover.length != 0) {\n    popover.popover();\n  }\n  /*======== 4. MULTIPLE SELECT ========*/\n\n\n  var multipleSelect = $(\".js-example-basic-multiple\");\n\n  if (multipleSelect.length != 0) {\n    multipleSelect.select2();\n  }\n  /*======== 4. LOADING BUTTON ========*/\n\n\n  var laddaButton = $('.ladda-button');\n\n  if (laddaButton.length != 0) {\n    Ladda.bind(\".ladda-button\", {\n      timeout: 5000\n    });\n    Ladda.bind(\".progress-demo button\", {\n      callback: function callback(instance) {\n        var progress = 0;\n        var interval = setInterval(function () {\n          progress = Math.min(progress + Math.random() * 0.1, 1);\n          instance.setProgress(progress);\n\n          if (progress === 1) {\n            instance.stop();\n            clearInterval(interval);\n          }\n        }, 200);\n      }\n    });\n  }\n  /*======== 5. TOASTER ========*/\n\n\n  var toaster = $('#toaster');\n\n  function callToaster(positionClass) {\n    toastr.options = {\n      closeButton: true,\n      debug: false,\n      newestOnTop: false,\n      progressBar: true,\n      positionClass: positionClass,\n      preventDuplicates: false,\n      onclick: null,\n      showDuration: \"300\",\n      hideDuration: \"1000\",\n      timeOut: \"5000\",\n      extendedTimeOut: \"1000\",\n      showEasing: \"swing\",\n      hideEasing: \"linear\",\n      showMethod: \"fadeIn\",\n      hideMethod: \"fadeOut\"\n    };\n    toastr.success(\"Welcome to Sleek Dashboard\", \"Howdy!\");\n  }\n\n  if (toaster.length != 0) {\n    if (document.dir != \"rtl\") {\n      callToaster(\"toast-top-right\");\n    } else {\n      callToaster(\"toast-top-left\");\n    }\n  }\n  /*======== 6. PROGRESS BAR ========*/\n\n\n  NProgress.done();\n  /*======== 6. PROGRESS BAR ========*/\n\n  $('.slim-scroll-right-sidebar-2').slimScroll({\n    opacity: 0,\n    height: '100%',\n    color: \"#999\",\n    size: \"5px\",\n    touchScrollStep: 50\n  }).mouseover(function () {\n    $(this).next(\".slimScrollBar\").css(\"opacity\", 0.4);\n  });\n  /*======== 7. CIRCLE PROGRESS ========*/\n\n  var circle = $('.circle');\n  var gray = '#f5f6fa';\n\n  if (circle.length != 0) {\n    circle.circleProgress({\n      lineCap: \"round\",\n      startAngle: 4.8,\n      emptyFill: [gray]\n    });\n  }\n\n  ;\n  /*======== 8. DATE PICKER ========*/\n  // $('input[name=\"dateRange\"]').daterangepicker({\n  //   autoUpdateInput: false,\n  //   singleDatePicker: true,\n  //   locale: {\n  //     cancelLabel: 'Clear'\n  //   }\n  // });\n  // $('input[name=\"dateRange\"]').on('apply.daterangepicker', function (ev, picker) {\n  //   $(this).val(picker.startDate.format('MM/DD/YYYY'));\n  // });\n  // $('input[name=\"dateRange\"]').on('cancel.daterangepicker', function (ev, picker) {\n  //   $(this).val('');\n  // });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/custom.js\n");

/***/ }),

/***/ "./resources/sleek-dashboard/js/index.js":
/*!***********************************************!*\
  !*** ./resources/sleek-dashboard/js/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sleek__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sleek */ \"./resources/sleek-dashboard/js/sleek.js\");\n/* harmony import */ var _sleek__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sleek__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _charts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./charts */ \"./resources/sleek-dashboard/js/charts/index.js\");\n/* harmony import */ var _maps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./maps */ \"./resources/sleek-dashboard/js/maps/index.js\");\n/* harmony import */ var _custom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./custom */ \"./resources/sleek-dashboard/js/custom.js\");\n/* harmony import */ var _custom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_custom__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _right_sidebar2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./right-sidebar2 */ \"./resources/sleek-dashboard/js/right-sidebar2.js\");\n/* harmony import */ var _right_sidebar2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_right_sidebar2__WEBPACK_IMPORTED_MODULE_4__);\n// �眏�嗡�� entry expose to window\n// import $ from 'jquery'\n// import bootstrap from 'bootstrap'\n\n\n\n\n // import * as dateRange  from './date-range';\n// import * as layoutSettings  from './layout-settings';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2xlZWstZGFzaGJvYXJkL2pzL2luZGV4LmpzPzAzNWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7Q0FFQTtBQUNBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL3NsZWVrLWRhc2hib2FyZC9qcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIOeUseWFtuS7liBlbnRyeSBleHBvc2UgdG8gd2luZG93XG4vLyBpbXBvcnQgJCBmcm9tICdqcXVlcnknXG4vLyBpbXBvcnQgYm9vdHN0cmFwIGZyb20gJ2Jvb3RzdHJhcCdcblxuaW1wb3J0ICogYXMgc2xlZWsgZnJvbSAnLi9zbGVlayc7XG5pbXBvcnQgKiBhcyBjaGFydHMgZnJvbSAnLi9jaGFydHMnO1xuaW1wb3J0ICogYXMgbWFwcyBmcm9tICcuL21hcHMnO1xuaW1wb3J0ICogYXMgY3VzdG9tIGZyb20gJy4vY3VzdG9tJztcbmltcG9ydCAqIGFzIHJpZ2h0U2lkZWJhciBmcm9tICcuL3JpZ2h0LXNpZGViYXIyJztcbi8vIGltcG9ydCAqIGFzIGRhdGVSYW5nZSAgZnJvbSAnLi9kYXRlLXJhbmdlJztcbi8vIGltcG9ydCAqIGFzIGxheW91dFNldHRpbmdzICBmcm9tICcuL2xheW91dC1zZXR0aW5ncyc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/index.js\n");

/***/ }),

/***/ "./resources/sleek-dashboard/js/maps/google-map.js":
/*!*********************************************************!*\
  !*** ./resources/sleek-dashboard/js/maps/google-map.js ***!
  \*********************************************************/
/***/ (() => {

eval("/* ====== Index ======\n\n1. BASIC MAP\n2. MAP WITH MARKER\n3. POLYGONAL MAP\n4. POLYLINE MAP\n5. MULTIPLE MARKER\n6. STYLED MAP\n\n====== End ======*/\n$(function () {\n  \"use strict\";\n  /*======== 1. BASIC MAP ========*/\n\n  function basicMap() {\n    var denver = new google.maps.LatLng(39.5501, -105.7821);\n    var map = new google.maps.Map(document.getElementById(\"basicMap\"), {\n      zoom: 8,\n      center: denver\n    });\n  }\n  /*======== 2. MAP WITH MARKER ========*/\n\n\n  function markerMap() {\n    var colorado = new google.maps.LatLng(38.82505, -104.821752);\n    var map = new google.maps.Map(document.getElementById(\"mapMarker\"), {\n      zoom: 8,\n      center: colorado\n    });\n    var contentString = '<div id=\"content\">' + '<h4 id=\"infoTitle\" class=\"info-title\">Colorado</h4>' + \"</div>\";\n    var infowindow = new google.maps.InfoWindow({\n      content: contentString\n    });\n    var marker = new google.maps.Marker({\n      position: colorado,\n      map: map\n    });\n    infowindow.open(map, marker);\n    marker.addListener(\"click\", function () {\n      infowindow.open(map, marker);\n    });\n  }\n  /*======== 3. POLYGONAL MAP ========*/\n\n\n  function polyMap() {\n    var center = new google.maps.LatLng(37.347442, -91.242551);\n    var map = new google.maps.Map(document.getElementById(\"polygonalMap\"), {\n      zoom: 5,\n      center: center,\n      mapTypeId: \"terrain\"\n    }); // Define the LatLng coordinates for the polygon's path.\n\n    var ractangleCoords = [{\n      lat: 39.086254,\n      lng: -94.567509\n    }, {\n      lat: 35.293261,\n      lng: -97.210534\n    }, {\n      lat: 36.058717,\n      lng: -86.863566\n    }, {\n      lat: 38.498833,\n      lng: -90.133947\n    }, {\n      lat: 39.086254,\n      lng: -94.567509\n    }]; // Construct the polygon.\n\n    var kansasRact = new google.maps.Polygon({\n      paths: ractangleCoords,\n      strokeColor: \"#4c84ff\",\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: \"#4c84ff\",\n      fillOpacity: 0.35\n    });\n    kansasRact.setMap(map);\n  }\n  /*======== 4. POLYLINE MAP ========*/\n\n\n  function polylineMap() {\n    var center = new google.maps.LatLng(39.399273, -86.151248);\n    var map = new google.maps.Map(document.getElementById(\"polylineMap\"), {\n      zoom: 5,\n      center: center,\n      mapTypeId: \"terrain\"\n    });\n    var flightPlanCoordinates = [{\n      lat: 39.08199,\n      lng: -94.568882\n    }, {\n      lat: 38.538338,\n      lng: -90.220769\n    }, {\n      lat: 39.399273,\n      lng: -86.151248\n    }, {\n      lat: 38.830073,\n      lng: -77.098642\n    }];\n    var flightPath = new google.maps.Polyline({\n      path: flightPlanCoordinates,\n      geodesic: true,\n      strokeColor: \"#4c84ff\",\n      strokeOpacity: 1.0,\n      strokeWeight: 3\n    });\n    flightPath.setMap(map);\n  }\n  /*======== 5. MULTIPLE MARKER ========*/\n\n\n  function multiMarkerMap() {\n    var locations = [[\"Bondi Beach\", -33.890542, 151.274856, 4], [\"Coogee Beach\", -33.923036, 151.259052, 5], [\"Cronulla Beach\", -34.028249, 151.157507, 3], [\"Manly Beach\", -33.80010128657071, 151.28747820854187, 2], [\"Maroubra Beach\", -33.950198, 151.259302, 1]];\n    var center = new google.maps.LatLng(-33.92, 151.25);\n    var map = new google.maps.Map(document.getElementById(\"multiMarkerMap\"), {\n      zoom: 10,\n      center: center,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n    var infowindow = new google.maps.InfoWindow();\n    var marker, i;\n\n    for (i = 0; i < locations.length; i++) {\n      marker = new google.maps.Marker({\n        position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n        map: map\n      });\n      google.maps.event.addListener(marker, \"click\", function (marker, i) {\n        return function () {\n          infowindow.setContent(locations[i][0]);\n          infowindow.open(map, marker);\n        };\n      }(marker, i));\n    }\n  }\n  /*======== 6. STYLED MAP ========*/\n\n\n  function styleMap() {\n    var style = [{\n      stylers: [{\n        hue: \"#2c3e50\"\n      }, {\n        saturation: 250\n      }]\n    }, {\n      featureType: \"road\",\n      elementType: \"geometry\",\n      stylers: [{\n        lightness: 50\n      }, {\n        visibility: \"simplified\"\n      }]\n    }, {\n      featureType: \"road\",\n      elementType: \"labels\",\n      stylers: [{\n        visibility: \"off\"\n      }]\n    }];\n    var dakota = new google.maps.LatLng(44.3341, -100.305);\n    var map = new google.maps.Map(document.getElementById(\"styleMap\"), {\n      zoom: 7,\n      center: dakota,\n      mapTypeId: \"roadmap\",\n      styles: style\n    });\n  }\n\n  if (document.getElementById(\"google-map\")) {\n    google.maps.event.addDomListener(window, \"load\", basicMap);\n    google.maps.event.addDomListener(window, \"load\", markerMap);\n    google.maps.event.addDomListener(window, \"load\", polyMap);\n    google.maps.event.addDomListener(window, \"load\", polylineMap);\n    google.maps.event.addDomListener(window, \"load\", multiMarkerMap);\n    google.maps.event.addDomListener(window, \"load\", styleMap);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/maps/google-map.js\n");

/***/ }),

/***/ "./resources/sleek-dashboard/js/maps/index.js":
/*!****************************************************!*\
  !*** ./resources/sleek-dashboard/js/maps/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _google_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./google-map */ \"./resources/sleek-dashboard/js/maps/google-map.js\");\n/* harmony import */ var _google_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_google_map__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _google_map__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _google_map__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _vector_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vector-map */ \"./resources/sleek-dashboard/js/maps/vector-map.js\");\n/* harmony import */ var _vector_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vector_map__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _vector_map__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _vector_map__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2xlZWstZGFzaGJvYXJkL2pzL21hcHMvaW5kZXguanM/NjcwMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL3NsZWVrLWRhc2hib2FyZC9qcy9tYXBzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9nb29nbGUtbWFwJztcbmV4cG9ydCAqIGZyb20gJy4vdmVjdG9yLW1hcCc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/maps/index.js\n");

/***/ }),

/***/ "./resources/sleek-dashboard/js/maps/vector-map.js":
/*!*********************************************************!*\
  !*** ./resources/sleek-dashboard/js/maps/vector-map.js ***!
  \*********************************************************/
/***/ (() => {

eval("/* ====== Index ======\n\n1. JVECTORMAP DASHBOARD\n2. JVECTORMAP ANALYTICS\n3. JVECTORMAP WIDGET\n\n====== End ======*/\n\n/*======== 1. JVECTORMAP DASHBOARD ========*/\nvar mapData = {\n  US: 1298,\n  FR: 540,\n  DE: 350,\n  BW: 450,\n  NA: 250,\n  ZW: 300,\n  AU: 760,\n  GB: 120,\n  ZA: 450\n};\nvar worldMap = $(\"#world\");\n\nif (worldMap.length != 0) {\n  worldMap.vectorMap({\n    map: \"world_mill\",\n    backgroundColor: \"transparent\",\n    zoomOnScroll: false,\n    regionStyle: {\n      initial: {\n        fill: \"#e4e4e4\",\n        \"fill-opacity\": 0.9,\n        stroke: \"none\",\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 0\n      }\n    },\n    markerStyle: {\n      initial: {\n        stroke: \"transparent\"\n      },\n      hover: {\n        stroke: \"rgba(112, 112, 112, 0.30)\"\n      }\n    },\n    markers: [{\n      latLng: [54.673629, -62.347026],\n      name: \"America\",\n      style: {\n        fill: \"limegreen\"\n      }\n    }, {\n      latLng: [62.466943, 11.797592],\n      name: \"Europe\",\n      style: {\n        fill: \"orange\"\n      }\n    }, {\n      latLng: [23.956725, -8.768815],\n      name: \"Africa\",\n      style: {\n        fill: \"red\"\n      }\n    }, {\n      latLng: [-21.943369, 123.102198],\n      name: \"Australia\",\n      style: {\n        fill: \"royalblue\"\n      }\n    }]\n  });\n}\n/*======== 2. JVECTORMAP ANALYTICS ========*/\n\n\nvar mapData2 = {\n  IN: 19000,\n  US: 13000,\n  TR: 9500,\n  DO: 7500,\n  PL: 4600,\n  UK: 4000\n};\nvar analyticWorldMap = $(\"#analytic-world\");\n\nif (analyticWorldMap.length != 0) {\n  analyticWorldMap.vectorMap({\n    map: \"world_mill\",\n    backgroundColor: \"transparent\",\n    zoomOnScroll: false,\n    regionStyle: {\n      initial: {\n        fill: \"#e4e4e4\",\n        \"fill-opacity\": 0.9,\n        stroke: \"none\",\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 0\n      }\n    },\n    series: {\n      regions: [{\n        values: mapData2,\n        scale: [\"#6a9ef9\", \"#b6d0ff\"],\n        normalizeFunction: \"polynomial\"\n      }]\n    }\n  });\n}\n/*======== 3. JVECTORMAP WIDGET ========*/\n\n\nvar demoWorldMap = $(\"#demoworld\");\n\nif (demoWorldMap.length != 0) {\n  demoWorldMap.vectorMap({\n    map: \"world_mill\",\n    backgroundColor: \"transparent\",\n    regionStyle: {\n      initial: {\n        fill: \"#9c9c9c\"\n      }\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2xlZWstZGFzaGJvYXJkL2pzL21hcHMvdmVjdG9yLW1hcC5qcz9kODA1Il0sIm5hbWVzIjpbIm1hcERhdGEiLCJVUyIsIkZSIiwiREUiLCJCVyIsIk5BIiwiWlciLCJBVSIsIkdCIiwiWkEiLCJ3b3JsZE1hcCIsIiQiLCJsZW5ndGgiLCJ2ZWN0b3JNYXAiLCJtYXAiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ6b29tT25TY3JvbGwiLCJyZWdpb25TdHlsZSIsImluaXRpYWwiLCJmaWxsIiwic3Ryb2tlIiwibWFya2VyU3R5bGUiLCJob3ZlciIsIm1hcmtlcnMiLCJsYXRMbmciLCJuYW1lIiwic3R5bGUiLCJtYXBEYXRhMiIsIklOIiwiVFIiLCJETyIsIlBMIiwiVUsiLCJhbmFseXRpY1dvcmxkTWFwIiwic2VyaWVzIiwicmVnaW9ucyIsInZhbHVlcyIsInNjYWxlIiwibm9ybWFsaXplRnVuY3Rpb24iLCJkZW1vV29ybGRNYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSUEsT0FBTyxHQUFHO0FBQ1pDLEVBQUFBLEVBQUUsRUFBRSxJQURRO0FBRVpDLEVBQUFBLEVBQUUsRUFBRSxHQUZRO0FBR1pDLEVBQUFBLEVBQUUsRUFBRSxHQUhRO0FBSVpDLEVBQUFBLEVBQUUsRUFBRSxHQUpRO0FBS1pDLEVBQUFBLEVBQUUsRUFBRSxHQUxRO0FBTVpDLEVBQUFBLEVBQUUsRUFBRSxHQU5RO0FBT1pDLEVBQUFBLEVBQUUsRUFBRSxHQVBRO0FBUVpDLEVBQUFBLEVBQUUsRUFBRSxHQVJRO0FBU1pDLEVBQUFBLEVBQUUsRUFBRTtBQVRRLENBQWQ7QUFZQSxJQUFJQyxRQUFRLEdBQUdDLENBQUMsQ0FBQyxRQUFELENBQWhCOztBQUVBLElBQUlELFFBQVEsQ0FBQ0UsTUFBVCxJQUFtQixDQUF2QixFQUEwQjtBQUN4QkYsRUFBQUEsUUFBUSxDQUFDRyxTQUFULENBQW1C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Q0FBcEI7O0FBQ0EsSUFBSTRCLFlBQVksQ0FBQzNCLE1BQWIsSUFBdUIsQ0FBM0IsRUFBOEI7QUFDNUIyQixFQUFBQSxZQUFZLENBQUMxQixTQUFiLENBQXVCO0FBQ3JCQyxJQUFBQSxHQUFHLEVBQUUsWUFEZ0I7QUFFckJDLElBQUFBLGVBQWUsRUFBRSxhQUZJO0FBR3JCRSxJQUFBQSxXQUFXLEVBQUU7QUFDWEMsTUFBQUEsT0FBTyxFQUFFO0FBQ1BDLFFBQUFBLElBQUksRUFBRTtBQURDO0FBREU7QUFIUSxHQUF2QjtBQVNEIiwic291cmNlc0NvbnRlbnQiOlsiLyogPT09PT09IEluZGV4ID09PT09PVxuXG4xLiBKVkVDVE9STUFQIERBU0hCT0FSRFxuMi4gSlZFQ1RPUk1BUCBBTkFMWVRJQ1NcbjMuIEpWRUNUT1JNQVAgV0lER0VUXG5cbj09PT09PSBFbmQgPT09PT09Ki9cblxuLyo9PT09PT09PSAxLiBKVkVDVE9STUFQIERBU0hCT0FSRCA9PT09PT09PSovXG52YXIgbWFwRGF0YSA9IHtcbiAgVVM6IDEyOTgsXG4gIEZSOiA1NDAsXG4gIERFOiAzNTAsXG4gIEJXOiA0NTAsXG4gIE5BOiAyNTAsXG4gIFpXOiAzMDAsXG4gIEFVOiA3NjAsXG4gIEdCOiAxMjAsXG4gIFpBOiA0NTBcbn07XG5cbnZhciB3b3JsZE1hcCA9ICQoXCIjd29ybGRcIilcblxuaWYgKHdvcmxkTWFwLmxlbmd0aCAhPSAwKSB7XG4gIHdvcmxkTWFwLnZlY3Rvck1hcCh7XG4gICAgbWFwOiBcIndvcmxkX21pbGxcIixcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICB6b29tT25TY3JvbGw6IGZhbHNlLFxuICAgIHJlZ2lvblN0eWxlOiB7XG4gICAgICBpbml0aWFsOiB7XG4gICAgICAgIGZpbGw6IFwiI2U0ZTRlNFwiLFxuICAgICAgICBcImZpbGwtb3BhY2l0eVwiOiAwLjksXG4gICAgICAgIHN0cm9rZTogXCJub25lXCIsXG4gICAgICAgIFwic3Ryb2tlLXdpZHRoXCI6IDAsXG4gICAgICAgIFwic3Ryb2tlLW9wYWNpdHlcIjogMFxuICAgICAgfVxuICAgIH0sXG4gICAgbWFya2VyU3R5bGU6IHtcbiAgICAgIGluaXRpYWw6IHtcbiAgICAgICAgc3Ryb2tlOiBcInRyYW5zcGFyZW50XCJcbiAgICAgIH0sXG4gICAgICBob3Zlcjoge1xuICAgICAgICBzdHJva2U6IFwicmdiYSgxMTIsIDExMiwgMTEyLCAwLjMwKVwiXG4gICAgICB9XG4gICAgfSxcblxuICAgIG1hcmtlcnM6IFtcbiAgICAgIHtcbiAgICAgICAgbGF0TG5nOiBbNTQuNjczNjI5LCAtNjIuMzQ3MDI2XSxcbiAgICAgICAgbmFtZTogXCJBbWVyaWNhXCIsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgZmlsbDogXCJsaW1lZ3JlZW5cIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsYXRMbmc6IFs2Mi40NjY5NDMsIDExLjc5NzU5Ml0sXG4gICAgICAgIG5hbWU6IFwiRXVyb3BlXCIsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgZmlsbDogXCJvcmFuZ2VcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsYXRMbmc6IFsyMy45NTY3MjUsIC04Ljc2ODgxNV0sXG4gICAgICAgIG5hbWU6IFwiQWZyaWNhXCIsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgZmlsbDogXCJyZWRcIlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsYXRMbmc6IFstMjEuOTQzMzY5LCAxMjMuMTAyMTk4XSxcbiAgICAgICAgbmFtZTogXCJBdXN0cmFsaWFcIixcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBmaWxsOiBcInJveWFsYmx1ZVwiXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBdXG4gIH0pO1xufVxuXG4vKj09PT09PT09IDIuIEpWRUNUT1JNQVAgQU5BTFlUSUNTID09PT09PT09Ki9cbnZhciBtYXBEYXRhMiA9IHtcbiAgSU46IDE5MDAwLFxuICBVUzogMTMwMDAsXG4gIFRSOiA5NTAwLFxuICBETzogNzUwMCxcbiAgUEw6IDQ2MDAsXG4gIFVLOiA0MDAwXG59O1xuXG52YXIgYW5hbHl0aWNXb3JsZE1hcCA9ICQoXCIjYW5hbHl0aWMtd29ybGRcIilcblxuaWYgKGFuYWx5dGljV29ybGRNYXAubGVuZ3RoICE9IDApIHtcbiAgYW5hbHl0aWNXb3JsZE1hcC52ZWN0b3JNYXAoe1xuICAgIG1hcDogXCJ3b3JsZF9taWxsXCIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gICAgem9vbU9uU2Nyb2xsOiBmYWxzZSxcbiAgICByZWdpb25TdHlsZToge1xuICAgICAgaW5pdGlhbDoge1xuICAgICAgICBmaWxsOiBcIiNlNGU0ZTRcIixcbiAgICAgICAgXCJmaWxsLW9wYWNpdHlcIjogMC45LFxuICAgICAgICBzdHJva2U6IFwibm9uZVwiLFxuICAgICAgICBcInN0cm9rZS13aWR0aFwiOiAwLFxuICAgICAgICBcInN0cm9rZS1vcGFjaXR5XCI6IDBcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc2VyaWVzOiB7XG4gICAgICByZWdpb25zOiBbXG4gICAgICAgIHtcbiAgICAgICAgICB2YWx1ZXM6IG1hcERhdGEyLFxuICAgICAgICAgIHNjYWxlOiBbXCIjNmE5ZWY5XCIsIFwiI2I2ZDBmZlwiXSxcbiAgICAgICAgICBub3JtYWxpemVGdW5jdGlvbjogXCJwb2x5bm9taWFsXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgfSk7XG59XG5cbi8qPT09PT09PT0gMy4gSlZFQ1RPUk1BUCBXSURHRVQgPT09PT09PT0qL1xudmFyIGRlbW9Xb3JsZE1hcCA9ICQoXCIjZGVtb3dvcmxkXCIpXG5pZiAoZGVtb1dvcmxkTWFwLmxlbmd0aCAhPSAwKSB7XG4gIGRlbW9Xb3JsZE1hcC52ZWN0b3JNYXAoe1xuICAgIG1hcDogXCJ3b3JsZF9taWxsXCIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gICAgcmVnaW9uU3R5bGU6IHtcbiAgICAgIGluaXRpYWw6IHtcbiAgICAgICAgZmlsbDogXCIjOWM5YzljXCJcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuIl0sImZpbGUiOiIuL3Jlc291cmNlcy9zbGVlay1kYXNoYm9hcmQvanMvbWFwcy92ZWN0b3ItbWFwLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/maps/vector-map.js\n");

/***/ }),

/***/ "./resources/sleek-dashboard/js/right-sidebar2.js":
/*!********************************************************!*\
  !*** ./resources/sleek-dashboard/js/right-sidebar2.js ***!
  \********************************************************/
/***/ (() => {

eval("(function () {\n  'use strict';\n\n  $(document).ready(function () {\n    //Layout settings visible\n    $('.right-sidebar-in').on('click', function () {\n      jQuery('.right-sidebar-container-2').addClass('right-sidebar-2-visible');\n    }); //THEME OPTION CLOSE BUTTON\n\n    $('.btn-close-right-sidebar-2').on('click', function () {\n      jQuery('.right-sidebar-container-2').removeClass('right-sidebar-2-visible');\n    });\n  });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2xlZWstZGFzaGJvYXJkL2pzL3JpZ2h0LXNpZGViYXIyLmpzPzQ0YjQiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJvbiIsImpRdWVyeSIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiXSwibWFwcGluZ3MiOiJBQUNBLENBQUMsWUFBVTtBQUNQOztBQUNBQSxFQUFBQSxDQUFDLENBQUNDLFFBQUQsQ0FBRCxDQUFZQyxLQUFaLENBQWtCLFlBQVk7QUFFMUI7QUFDQUYsSUFBQUEsQ0FBQyxDQUFDLG1CQUFELENBQUQsQ0FBdUJHLEVBQXZCLENBQTBCLE9BQTFCLEVBQW1DLFlBQVk7QUFDM0NDLE1BQUFBLE1BQU0sQ0FBQyw0QkFBRCxDQUFOLENBQXFDQyxRQUFyQyxDQUE4Qyx5QkFBOUM7QUFDSCxLQUZELEVBSDBCLENBTzFCOztBQUNBTCxJQUFBQSxDQUFDLENBQUMsNEJBQUQsQ0FBRCxDQUFnQ0csRUFBaEMsQ0FBbUMsT0FBbkMsRUFBNEMsWUFBVTtBQUNsREMsTUFBQUEsTUFBTSxDQUFDLDRCQUFELENBQU4sQ0FBcUNFLFdBQXJDLENBQWlELHlCQUFqRDtBQUNILEtBRkQ7QUFHSCxHQVhEO0FBYUgsQ0FmRCIsInNvdXJjZXNDb250ZW50IjpbIlxuKGZ1bmN0aW9uKCl7XG4gICAgJ3VzZSBzdHJpY3QnO1xuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAvL0xheW91dCBzZXR0aW5ncyB2aXNpYmxlXG4gICAgICAgICQoJy5yaWdodC1zaWRlYmFyLWluJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgalF1ZXJ5KCcucmlnaHQtc2lkZWJhci1jb250YWluZXItMicpLmFkZENsYXNzKCdyaWdodC1zaWRlYmFyLTItdmlzaWJsZScpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvL1RIRU1FIE9QVElPTiBDTE9TRSBCVVRUT05cbiAgICAgICAgJCgnLmJ0bi1jbG9zZS1yaWdodC1zaWRlYmFyLTInKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgalF1ZXJ5KCcucmlnaHQtc2lkZWJhci1jb250YWluZXItMicpLnJlbW92ZUNsYXNzKCdyaWdodC1zaWRlYmFyLTItdmlzaWJsZScpO1xuICAgICAgICB9KVxuICAgIH0pO1xuXG59KSgpXG4iXSwiZmlsZSI6Ii4vcmVzb3VyY2VzL3NsZWVrLWRhc2hib2FyZC9qcy9yaWdodC1zaWRlYmFyMi5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/right-sidebar2.js\n");

/***/ }),

/***/ "./resources/sleek-dashboard/js/sleek.js":
/*!***********************************************!*\
  !*** ./resources/sleek-dashboard/js/sleek.js ***!
  \***********************************************/
/***/ (() => {

eval("/* ====== Index ======\n\n1. SCROLLBAR SIDEBAR\n2. BACKDROP\n3. SIDEBAR MENU\n4. SIDEBAR TOGGLE FOR MOBILE\n5. SIDEBAR TOGGLE FOR VARIOUS SIDEBAR LAYOUT\n6. TODO LIST\n7. RIGHT SIDEBAR\n\n====== End ======*/\n$(document).ready(function () {\n  \"use strict\";\n  /*======== 1. SCROLLBAR SIDEBAR ========*/\n\n  var sidebarScrollbar = $(\".sidebar-scrollbar\");\n\n  if (sidebarScrollbar.length != 0) {\n    sidebarScrollbar.slimScroll({\n      opacity: 0,\n      height: \"100%\",\n      color: \"#808080\",\n      size: \"5px\",\n      touchScrollStep: 50\n    }).mouseover(function () {\n      $(this).next(\".slimScrollBar\").css(\"opacity\", 0.5);\n    });\n  }\n  /*======== 2. MOBILE OVERLAY ========*/\n\n\n  if ($(window).width() < 768) {\n    $(\".sidebar-toggle\").on(\"click\", function () {\n      $(\"body\").css(\"overflow\", \"hidden\");\n      $('body').prepend('<div class=\"mobile-sticky-body-overlay\"></div>');\n    });\n    $(document).on(\"click\", '.mobile-sticky-body-overlay', function (e) {\n      $(this).remove();\n      $(\"#body\").removeClass(\"sidebar-mobile-in\").addClass(\"sidebar-mobile-out\");\n      $(\"body\").css(\"overflow\", \"auto\");\n    });\n  }\n  /*======== 3. SIDEBAR MENU ========*/\n\n\n  var sidebar = $(\".sidebar\");\n\n  if (sidebar.length != 0) {\n    $(\".sidebar .nav > .has-sub > a\").click(function () {\n      $(this).parent().siblings().removeClass('expand');\n      $(this).parent().toggleClass('expand');\n    });\n    $(\".sidebar .nav > .has-sub .has-sub > a\").click(function () {\n      $(this).parent().toggleClass('expand');\n    });\n  }\n  /*======== 4. SIDEBAR TOGGLE FOR MOBILE ========*/\n\n\n  if ($(window).width() < 768) {\n    $(document).on(\"click\", \".sidebar-toggle\", function (e) {\n      e.preventDefault();\n      var min = \"sidebar-mobile-in\",\n          min_out = \"sidebar-mobile-out\",\n          body = \"#body\";\n      $(body).hasClass(min) ? $(body).removeClass(min).addClass(min_out) : $(body).addClass(min).removeClass(min_out);\n    });\n  }\n  /*======== 5. SIDEBAR TOGGLE FOR VARIOUS SIDEBAR LAYOUT ========*/\n\n\n  var body = $(\"#body\");\n\n  if ($(window).width() >= 768) {\n    if (typeof window.isMinified === \"undefined\") {\n      window.isMinified = false;\n    }\n\n    if (typeof window.isCollapsed === \"undefined\") {\n      window.isCollapsed = false;\n    }\n\n    $(\"#sidebar-toggler\").on(\"click\", function () {\n      if (body.hasClass(\"sidebar-fixed-offcanvas\") || body.hasClass(\"sidebar-static-offcanvas\")) {\n        $(this).addClass(\"sidebar-offcanvas-toggle\").removeClass(\"sidebar-toggle\");\n\n        if (window.isCollapsed === false) {\n          body.addClass(\"sidebar-collapse\");\n          window.isCollapsed = true;\n          window.isMinified = false;\n        } else {\n          body.removeClass(\"sidebar-collapse\");\n          body.addClass(\"sidebar-collapse-out\");\n          setTimeout(function () {\n            body.removeClass(\"sidebar-collapse-out\");\n          }, 300);\n          window.isCollapsed = false;\n        }\n      }\n\n      if (body.hasClass(\"sidebar-fixed\") || body.hasClass(\"sidebar-static\")) {\n        $(this).addClass(\"sidebar-toggle\").removeClass(\"sidebar-offcanvas-toggle\");\n\n        if (window.isMinified === false) {\n          body.removeClass(\"sidebar-collapse sidebar-minified-out\").addClass(\"sidebar-minified\");\n          window.isMinified = true;\n          window.isCollapsed = false;\n        } else {\n          body.removeClass(\"sidebar-minified\");\n          body.addClass(\"sidebar-minified-out\");\n          window.isMinified = false;\n        }\n      }\n    });\n  }\n\n  if ($(window).width() >= 768 && $(window).width() < 992) {\n    if (body.hasClass(\"sidebar-fixed\") || body.hasClass(\"sidebar-static\")) {\n      body.removeClass(\"sidebar-collapse sidebar-minified-out\").addClass(\"sidebar-minified\");\n      window.isMinified = true;\n    }\n  }\n  /*======== 6. TODO LIST ========*/\n\n\n  function todoCheckAll() {\n    var mdis = document.querySelectorAll(\".todo-single-item .mdi\");\n    mdis.forEach(function (fa) {\n      fa.addEventListener(\"click\", function (e) {\n        e.stopPropagation();\n        e.target.parentElement.classList.toggle(\"finished\");\n      });\n    });\n  }\n\n  if (document.querySelector(\"#todo\")) {\n    var list = document.querySelector(\"#todo-list\"),\n        todoInput = document.querySelector(\"#todo-input\"),\n        todoInputForm = todoInput.querySelector(\"form\"),\n        item = todoInputForm.querySelector(\"input\");\n    document.querySelector(\"#add-task\").addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      todoInput.classList.toggle(\"d-block\");\n      item.focus();\n    });\n    todoInputForm.addEventListener(\"submit\", function (e) {\n      e.preventDefault();\n\n      if (item.value.length <= 0) {\n        return;\n      }\n\n      list.innerHTML = '<div class=\"todo-single-item d-flex flex-row justify-content-between\">' + '<i class=\"mdi\"></i>' + '<span>' + item.value + '</span>' + '<span class=\"badge badge-primary\">Today</span>' + '</div>' + list.innerHTML;\n      item.value = \"\"; //Close input field\n\n      todoInput.classList.toggle(\"d-block\");\n      todoCheckAll();\n    });\n    todoCheckAll();\n  }\n  /*======== 7. RIGHT SIDEBAR ========*/\n\n\n  var rightSidebarIn = 'right-sidebar-in';\n  var rightSidebarOut = 'right-sidebar-out';\n  $('.nav-right-sidebar .nav-link').on('click', function () {\n    if (!body.hasClass(rightSidebarIn)) {\n      body.addClass(rightSidebarIn).removeClass(rightSidebarOut);\n    } else if ($(this).hasClass('show')) {\n      body.addClass(rightSidebarOut).removeClass(rightSidebarIn);\n    }\n  });\n  $('.card-right-sidebar .close').on('click', function () {\n    body.removeClass(rightSidebarIn).addClass(rightSidebarOut);\n  });\n\n  if ($(window).width() < 1200) {\n    var togglerInClass = \"right-sidebar-toggoler-in\";\n    var togglerOutClass = \"right-sidebar-toggoler-out\";\n    body.addClass(togglerOutClass);\n    $('.btn-right-sidebar-toggler').on('click', function () {\n      if (body.hasClass(togglerOutClass)) {\n        body.addClass(togglerInClass).removeClass(togglerOutClass);\n      } else {\n        body.addClass(togglerOutClass).removeClass(togglerInClass);\n      }\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/sleek-dashboard/js/sleek.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/
/************************************************************************/
/******/
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/sleek-dashboard/js/index.js");
/******/
/******/ })()
;